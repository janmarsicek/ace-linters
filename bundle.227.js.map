{"version":3,"file":"bundle.227.js","mappings":";;;;;;;;;;AAAO,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI;IACnC,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,CAAC;IACvB,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,CAAC;IACvB,MAAM,aAAa,GAAG,EAAE,CAAC;IACzB,KAAK,MAAM,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;QAC5D,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;YACxB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC1B,aAAa,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACpD;iBAAM;gBACH,aAAa,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aAC3D;SACJ;aAAM;YACH,aAAa,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;SAC/C;KACJ;IACD,OAAO,aAAa,CAAC;AACzB,CAAC;;;;;;;;;;;AChBD;AACA;AACA;AACA;AACa;AACb,qBAAqB,SAAI,IAAI,SAAI;AACjC,6EAA6E,OAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,SAAS;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,oGAAoG,SAAS;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sDAAsD,2BAA2B;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;;;;;;UCtRA;UACA;;UAEA;UACA;UACA;UACA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","sources":["webpack://ace-linters-root/./packages/ace-linters/utils.ts","webpack://ace-linters-root/./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://ace-linters-root/webpack/bootstrap","webpack://ace-linters-root/webpack/runtime/compat get default export","webpack://ace-linters-root/webpack/runtime/define property getters","webpack://ace-linters-root/webpack/runtime/ensure chunk","webpack://ace-linters-root/webpack/runtime/get javascript chunk filename","webpack://ace-linters-root/webpack/runtime/global","webpack://ace-linters-root/webpack/runtime/hasOwnProperty shorthand","webpack://ace-linters-root/webpack/runtime/make namespace object","webpack://ace-linters-root/webpack/runtime/node module decorator","webpack://ace-linters-root/webpack/runtime/publicPath","webpack://ace-linters-root/webpack/runtime/importScripts chunk loading","webpack://ace-linters-root/./packages/ace-linters/message-types.ts","webpack://ace-linters-root/./packages/ace-linters/services/service-manager.ts","webpack://ace-linters-root/./packages/demo/webworker-lsp/webworker.ts"],"sourcesContent":["export function mergeObjects(obj1, obj2) {\n    if (!obj1) return obj2;\n    if (!obj2) return obj1;\n    const mergedObjects = {};\n    for (const key of [...Object.keys(obj1), ...Object.keys(obj2)]) {\n        if (obj1[key] && obj2[key]) {\n            if (Array.isArray(obj1[key])) {\n                mergedObjects[key] = obj1[key].concat(obj2[key]);\n            } else {\n                mergedObjects[key] = mergeObjects(obj1[key], obj2[key]);\n            }\n        } else {\n            mergedObjects[key] = obj1[key] ?? obj2[key];\n        }\n    }\n    return mergedObjects;\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (changes, version) {\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                var range = getWellformedRange(change.range);\n                // update content\n                var startOffset = this.offsetAt(range.start);\n                var endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                var startLine = Math.max(range.start.line, 0);\n                var endLine = Math.max(range.end.line, 0);\n                var lineOffsets = this._lineOffsets;\n                var addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (var i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice.apply(lineOffsets, __spreadArray([startLine + 1, endLine - startLine], addedLineOffsets, false));\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                var diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (var i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return { line: line, character: offset - lineOffsets[line] };\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.isIncremental = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    };\n    FullTextDocument.isFull = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    };\n    return FullTextDocument;\n}());\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits.map(getWellformedEdit), function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = 0;\n        var spans = [];\n        for (var _i = 0, sortedEdits_1 = sortedEdits; _i < sortedEdits_1.length; _i++) {\n            var e = sortedEdits_1[_i];\n            var startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    var p = (data.length / 2) | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        var ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset) {\n    if (textOffset === void 0) { textOffset = 0; }\n    var result = isAtLineStart ? [textOffset] : [];\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charCodeAt(i);\n        if (ch === 13 /* CharCode.CarriageReturn */ || ch === 10 /* CharCode.LineFeed */) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction getWellformedRange(range) {\n    var start = range.start;\n    var end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    var range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range: range };\n    }\n    return textEdit;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t227: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkace_linters_root\"] = self[\"webpackChunkace_linters_root\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","import {Ace} from \"ace-code\";\nimport {FormattingOptions} from \"vscode-languageserver-protocol\";\nimport {AceLinters} from \"./types\";\nimport ServiceOptions = AceLinters.ServiceOptions;\nimport * as lsp from \"vscode-languageserver-protocol\";\n\nexport abstract class BaseMessage {\n    abstract type: MessageType;\n    sessionId: string;\n\n    protected constructor(sessionId) {\n        this.sessionId = sessionId;\n    }\n}\n\nexport class InitMessage extends BaseMessage {\n    type: MessageType = MessageType.init;\n    mode: string;\n    options?: { [key: string]: any };\n    value: string;\n\n    constructor(sessionId: string, value: string, mode: string, options?: { [p: string]: any }) {\n        super(sessionId);\n        this.options = options;\n        this.mode = mode;\n        this.value = value;\n    }\n}\n\nexport class FormatMessage extends BaseMessage {\n    type: MessageType = MessageType.format;\n    value: lsp.Range;\n    format: FormattingOptions;\n\n    constructor(sessionId: string, value: lsp.Range, format) {\n        super(sessionId);\n        this.value = value;\n        this.format = format;\n    }\n}\n\nexport class CompleteMessage extends BaseMessage {\n    type: MessageType = MessageType.complete;\n    value: lsp.Position;\n\n    constructor(sessionId: string, value: lsp.Position) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class ResolveCompletionMessage extends BaseMessage {\n    type: MessageType = MessageType.resolveCompletion;\n    value: lsp.CompletionItem;\n\n    constructor(sessionId: string, value: lsp.CompletionItem) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class HoverMessage extends BaseMessage {\n    type: MessageType = MessageType.hover;\n    value: lsp.Position;\n\n    constructor(sessionId: string, value: lsp.Position) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class ValidateMessage extends BaseMessage {\n    type: MessageType = MessageType.validate;\n\n    constructor(sessionId: string) {\n        super(sessionId);\n    }\n}\n\nexport class ChangeMessage extends BaseMessage {\n    type: MessageType = MessageType.change;\n    value: string;\n\n    constructor(sessionId: string, value: string) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class DeltasMessage extends BaseMessage {\n    type: MessageType = MessageType.applyDelta;\n    value: Ace.Delta[];\n\n    constructor(sessionId: string, value: Ace.Delta[]) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class ChangeModeMessage extends BaseMessage {\n    type: MessageType = MessageType.changeMode;\n    mode: string;\n    value: string;\n\n    constructor(sessionId: string, value: string, mode: string) {\n        super(sessionId);\n        this.value = value;\n        this.mode = mode;\n    }\n}\n\nexport class ChangeOptionsMessage extends BaseMessage {\n    type: MessageType = MessageType.changeOptions;\n    options: ServiceOptions;\n    merge: boolean;\n\n    constructor(sessionId: string, options: ServiceOptions, merge: boolean = false) {\n        super(sessionId);\n        this.options = options;\n        this.merge = merge;\n    }\n}\n\nexport class DisposeMessage extends BaseMessage {\n    type: MessageType = MessageType.dispose;\n\n    constructor(sessionId: string) {\n        super(sessionId);\n    }\n}\n\nexport class GlobalOptionsMessage {\n    type: MessageType = MessageType.globalOptions;\n    serviceName: string;\n    options: ServiceOptions;\n    merge: boolean;\n\n    constructor(serviceName: string, options: ServiceOptions, merge: boolean) {\n        this.serviceName = serviceName;\n        this.options = options;\n        this.merge = merge;\n    }\n}\n\nexport enum MessageType {\n    init, format, complete, resolveCompletion, change, hover, validate, applyDelta, changeMode, changeOptions, dispose, globalOptions\n}\n","import LanguageService = AceLinters.LanguageService;\nimport ServiceOptions = AceLinters.ServiceOptions;\nimport {AceLinters} from \"../types\";\nimport {mergeObjects} from \"../utils\";\nimport {MessageType} from \"../message-types\";\nimport {TextDocument} from \"vscode-languageserver-textdocument\";\nimport {TextDocumentIdentifier} from \"vscode-languageserver-protocol\";\n\ninterface ServiceData {\n    module: () => any,\n    className: string,\n    modes: string,\n    serviceInstance?: LanguageService,\n    options?: ServiceOptions\n}\n\nexport class ServiceManager {\n    private $services: { [serviceName: string]: ServiceData } = {};\n    private $sessionIDToMode: { [sessionID: string]: string } = {};\n\n    constructor(ctx) {\n        let doValidation = (document: TextDocumentIdentifier, serviceInstance?: LanguageService) => {\n            serviceInstance ??= this.getServiceInstance(document.uri);\n            if (!serviceInstance)\n                return;\n            let postMessage = {\n                \"type\": MessageType.validate,\n            };\n            let sessionIDList = Object.keys(serviceInstance.documents);\n            for (let sessionID of sessionIDList) {\n                serviceInstance.doValidation({uri: sessionID}).then((result) => {\n                    postMessage[\"sessionId\"] = sessionID;\n                    postMessage[\"value\"] = result;\n                    ctx.postMessage(postMessage);\n                });\n\n            }\n        }\n        ctx.addEventListener(\"message\", async (ev) => {\n            let message = ev.data;\n            let sessionID = message.sessionId as string;\n            let postMessage = {\n                \"type\": message.type,\n                \"sessionId\": sessionID,\n            };\n            let serviceInstance = this.getServiceInstance(sessionID);\n            let document = serviceInstance?.getDocument(sessionID) ?? {\n                uri: sessionID\n            };\n            switch (message[\"type\"] as MessageType) {\n                case MessageType.format:\n                    postMessage[\"value\"] = serviceInstance?.format(document, message.value, message.format);\n                    break;\n                case MessageType.complete:\n                    postMessage[\"value\"] = await serviceInstance?.doComplete(document, message.value);\n                    break;\n                case MessageType.resolveCompletion:\n                    postMessage[\"value\"] = await serviceInstance?.doResolve(message.value);\n                    break;\n                case MessageType.change:\n                    serviceInstance?.setValue(sessionID, message.value);\n                    doValidation(document, serviceInstance);\n                    break;\n                case MessageType.applyDelta:\n                    serviceInstance?.applyDeltas(sessionID, message.value);\n                    doValidation(document, serviceInstance);\n                    break;\n                case MessageType.hover:\n                    postMessage[\"value\"] = await serviceInstance?.doHover(document, message.value);\n                    break;\n                case MessageType.validate:\n                    postMessage[\"value\"] = await serviceInstance?.doValidation(document);\n                    break;\n                case MessageType.init: //this should be first message\n                    await this.addDocument(sessionID, message.value, message.mode, message.options);\n                    doValidation(document);\n                    break;\n                case MessageType.changeMode:\n                    await this.changeDocumentMode(document, message.value, message.mode, message.options);\n                    doValidation(document, serviceInstance);\n                    break;\n                case MessageType.changeOptions:\n                    serviceInstance?.setOptions(sessionID, message.options);\n                    doValidation(document, serviceInstance);\n                    break;\n                case MessageType.dispose:\n                    this.removeDocument(document);\n                    break;\n                case MessageType.globalOptions:\n                    this.setGlobalOptions(message.serviceName, message.options, message.merge);\n                    break;\n            }\n\n            ctx.postMessage(postMessage);\n        })\n    }\n\n    private static async $initServiceInstance(service: ServiceData) {\n        let module = await service.module();\n        service.serviceInstance = new module[service.className](service.modes);\n        service.serviceInstance.setGlobalOptions(service.options);\n    }\n\n    private async $getServiceInstanceByMode(mode: string): Promise<LanguageService> {\n        let service = this.findServiceByMode(mode);\n        if (!service)\n            return;\n        if (!service.serviceInstance)\n            await ServiceManager.$initServiceInstance(service);\n        return service.serviceInstance;\n    }\n\n    setGlobalOptions(serviceName: string, options: ServiceOptions, merge = false) {\n        let service = this.$services[serviceName];\n        if (!service)\n            return;\n        service.options = merge ? mergeObjects(options, service.options) : options;\n        if (service.serviceInstance) {\n            service.serviceInstance.setGlobalOptions(service.options);\n        }\n    }\n\n    async addDocument(sessionID: string, documentValue: string, mode: string, options?: ServiceOptions) {\n        if (!mode || !/^ace\\/mode\\//.test(mode))\n            return;\n\n        mode = mode.replace(\"ace/mode/\", \"\");\n\n        let document = TextDocument.create(sessionID, mode, 1, documentValue);\n        let serviceInstance = await this.$getServiceInstanceByMode(mode);\n        if (!serviceInstance)\n            return;\n        serviceInstance.addDocument(document);\n        this.$sessionIDToMode[sessionID] = mode;\n    }\n\n    async changeDocumentMode(document: TextDocumentIdentifier, value: string, mode: string, options: ServiceOptions) {\n        this.removeDocument(document);\n        await this.addDocument(document.uri, value, mode, options);\n    }\n\n    removeDocument(document: TextDocumentIdentifier) {\n        let service = this.getServiceInstance(document.uri);\n        if (service) {\n            service.removeDocument(document);\n            delete this.$sessionIDToMode[document.uri];\n        }\n    }\n\n    getServiceInstance(sessionID: string): LanguageService {\n        let mode = this.$sessionIDToMode[sessionID];\n        let service = this.findServiceByMode(mode);\n        if (!mode || !service?.serviceInstance)\n            return; //TODO:\n\n        return service.serviceInstance;\n    }\n\n    findServiceByMode(mode: string): ServiceData {\n        return Object.values(this.$services).find((el) => {\n            let extensions = el.modes.split('|');\n            if (extensions.includes(mode))\n                return el;\n        });\n    }\n\n    registerService(name: string, service: ServiceData) {\n        this.$services[name] = service;\n    }\n}\n","import {ServiceManager} from \"ace-linters/services/service-manager\";\n\nlet manager = new ServiceManager(self);\nmanager.registerService(\"html\", {\n    module: () => import(\"ace-linters/services/html/html-service\"),\n    className: \"HtmlService\",\n    modes: \"html\"\n});\nmanager.registerService(\"css\", {\n    module: () => import(\"ace-linters/services/css/css-service\"),\n    className: \"CssService\",\n    modes: \"css\"\n});\nmanager.registerService(\"less\", {\n    module: () => import(\"ace-linters/services/css/css-service\"),\n    className: \"CssService\",\n    modes: \"less\"\n});\nmanager.registerService(\"scss\", {\n    module: () => import(\"ace-linters/services/css/css-service\"),\n    className: \"CssService\",\n    modes: \"scss\"\n});\nmanager.registerService(\"json\", {\n    module: () => import(\"ace-linters/services/json/json-service\"),\n    className: \"JsonService\",\n    modes: \"json\",\n});\nmanager.registerService(\"json5\", {\n    module: () => import(\"ace-linters/services/json/json-service\"),\n    className: \"JsonService\",\n    modes: \"json5\",\n});\nmanager.registerService(\"typescript\", {\n    module: () => import(\"ace-linters/services/typescript/typescript-service\"),\n    className: \"TypescriptService\",\n    modes: \"typescript|javascript|tsx|jsx\",\n});\nmanager.registerService(\"lua\", {\n    module: () => import(\"ace-linters/services/lua/lua-service\"),\n    className: \"LuaService\",\n    modes: \"lua\",\n});\n"],"names":[],"sourceRoot":""}