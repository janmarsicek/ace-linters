{"version":3,"file":"bundle.411.js","mappings":"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E,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC;;gBAA1E,SAA0E,CAAC;gBAC3E,yBAAM;;gBAEN,OAAO,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC7E,yBAAM;;gBAGd,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;;;;KAChC,CAAC;;;;;;;UC5CF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;WClCA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack://ace-linters/./node_modules/ace-code/src/ sync","webpack://ace-linters/./src/message-types.ts","webpack://ace-linters/./src/services/base-service.ts","webpack://ace-linters/./src/services/css/css-service.ts","webpack://ace-linters/./src/services/html/html-service.ts","webpack://ace-linters/./src/services/json/json-service.ts","webpack://ace-linters/./src/services/service-manager.ts","webpack://ace-linters/./src/type-converters/common-converters.ts","webpack://ace-linters/./src/type-converters/vscode-converters.ts","webpack://ace-linters/./src/webworker.ts","webpack://ace-linters/webpack/bootstrap","webpack://ace-linters/webpack/runtime/chunk loaded","webpack://ace-linters/webpack/runtime/define property getters","webpack://ace-linters/webpack/runtime/ensure chunk","webpack://ace-linters/webpack/runtime/get javascript chunk filename","webpack://ace-linters/webpack/runtime/global","webpack://ace-linters/webpack/runtime/hasOwnProperty shorthand","webpack://ace-linters/webpack/runtime/make namespace object","webpack://ace-linters/webpack/runtime/publicPath","webpack://ace-linters/webpack/runtime/importScripts chunk loading","webpack://ace-linters/webpack/runtime/startup chunk dependencies","webpack://ace-linters/webpack/before-startup","webpack://ace-linters/webpack/startup","webpack://ace-linters/webpack/after-startup"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 2126;\nmodule.exports = webpackEmptyContext;","import {Ace} from \"ace-code\";\nimport {FormattingOptions} from \"vscode-languageserver-types\";\nimport {AceLinters} from \"./services/language-service\";\nimport ServiceOptions = AceLinters.ServiceOptions;\n\nexport abstract class BaseMessage {\n    abstract type: MessageType;\n    sessionId: string;\n\n    protected constructor(sessionId) {\n        this.sessionId = sessionId;\n    }\n}\n\nexport class InitMessage extends BaseMessage {\n    type: MessageType = MessageType.init;\n    mode: string;\n    options: { [key: string]: any };\n    value: string;\n\n    constructor(sessionId: string, value: string, mode: string, options: { [p: string]: any }) {\n        super(sessionId);\n        this.options = options;\n        this.mode = mode;\n        this.value = value;\n    }\n}\n\nexport class FormatMessage extends BaseMessage {\n    type: MessageType = MessageType.format;\n    value: Ace.Range;\n    format: FormattingOptions;\n\n    constructor(sessionId: string, value: Ace.Range, format) {\n        super(sessionId);\n        this.value = value;\n        this.format = format;\n    }\n}\n\nexport class CompleteMessage extends BaseMessage {\n    type: MessageType = MessageType.complete;\n    value: Ace.Point;\n\n    constructor(sessionId: string, value: Ace.Point) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class HoverMessage extends BaseMessage {\n    type: MessageType = MessageType.hover;\n    value: Ace.Point;\n\n    constructor(sessionId: string, value: Ace.Point) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class ValidateMessage extends BaseMessage {\n    type: MessageType = MessageType.validate;\n\n    constructor(sessionId: string) {\n        super(sessionId);\n    }\n}\n\nexport class ChangeMessage extends BaseMessage {\n    type: MessageType = MessageType.change;\n    value: string;\n\n    constructor(sessionId: string, value: string) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class DeltasMessage extends BaseMessage {\n    type: MessageType = MessageType.applyDelta;\n    value: Ace.Delta[];\n\n    constructor(sessionId: string, value: Ace.Delta[]) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class ChangeModeMessage extends BaseMessage {\n    type: MessageType = MessageType.changeMode;\n    mode: string;\n    options: ServiceOptions;\n\n    constructor(sessionId: string, mode: string, options: ServiceOptions) {\n        super(sessionId);\n        this.mode = mode;\n        this.options = options;\n    }\n}\n\nexport class ChangeOptionsMessage extends BaseMessage {\n    type: MessageType = MessageType.changeOptions;\n    options: ServiceOptions;\n\n    constructor(sessionId: string, options: ServiceOptions) {\n        super(sessionId);\n        this.options = options;\n    }\n}\n\nexport enum MessageType {\n    init, format, complete, change, hover, validate, applyDelta, changeMode, changeOptions\n}","import {FormattingOptions} from \"vscode-languageserver-types\";\nimport {AceLinters} from \"./language-service\";\nimport {Ace} from \"ace-code\";\n\nexport abstract class BaseService<OptionsType extends AceLinters.ServiceOptions = AceLinters.ServiceOptions> implements AceLinters.LanguageService {\n    abstract $service;\n    mode: string;\n    documents: {[sessionID: string]: Ace.Document} = {};\n    options: {[sessionID: string]: OptionsType} = {};\n\n    protected constructor(mode: string) {\n        this.mode = mode;\n    }\n\n    $getDocument(sessionID: string) {\n        return null;\n    }\n\n    addDocument(sessionID: string, document: Ace.Document, options?: OptionsType) {\n        this.documents[sessionID] = document;\n        if (options)\n            this.setOptions(sessionID, options);\n    }\n\n    getDocument(sessionID: string): Ace.Document {\n        return this.documents[sessionID];\n    }\n\n    removeDocument(sessionID: string) {\n        delete this.documents[sessionID];\n        if (this.options[sessionID]) {\n            delete this.options[sessionID];\n        }\n    }\n\n    getDocumentValue(sessionID: string): string {\n        return this.getDocument(sessionID).getValue();\n    }\n\n    setValue(sessionID: string, value: string) {\n        this.getDocument(sessionID).setValue(value);\n    }\n\n    setOptions(sessionID: string, options: OptionsType) {\n        this.options[sessionID] = options;\n    }\n\n    applyDeltas(sessionID: string, deltas: Ace.Delta[]) {\n        let data = deltas;\n        let document = this.getDocument(sessionID);\n        if (data[0].start) {\n            document.applyDeltas(data);\n        } else {\n            for (let i = 0; i < data.length; i += 2) {\n                let d, err;\n                if (Array.isArray(data[i + 1])) {\n                    d = {action: \"insert\", start: data[i], lines: data[i + 1]};\n                } else {\n                    d = {action: \"remove\", start: data[i], end: data[i + 1]};\n                }\n\n                let linesLength = document[\"$lines\"].length;\n                if ((d.action == \"insert\" ? d.start : d.end).row >= linesLength) {\n                    err = new Error(\"Invalid delta\");\n                    err.data = {\n                        linesLength: linesLength,\n                        start: d.start,\n                        end: d.end\n                    };\n                    throw err;\n                }\n\n                document.applyDelta(d, true);\n            }\n        }\n    }\n\n    format(sessionID: string, range: Ace.Range, format: FormattingOptions): AceLinters.TextEdit[] {\n        return [];\n    }\n\n    async doHover(sessionID: string, position: Ace.Point) {\n        return null;\n    }\n\n    async doValidation(sessionID: string): Promise<Ace.Annotation[]> {\n        return [];\n    }\n\n    async doComplete(sessionID: string, position: Ace.Point): Promise<Ace.Completion[]> {\n        return;\n    }\n}","import {LanguageService as VSLanguageService} from \"vscode-css-languageservice\";\nimport {Ace} from \"ace-code\";\nimport {fromPoint, fromRange, toAceTextEdits, toAnnotations, toCompletions, toTooltip} from \"../../type-converters/vscode-converters\";\nimport {CSSFormatConfiguration} from \"vscode-css-languageservice/lib/umd/cssLanguageTypes\";\nimport {BaseService} from \"../base-service\";\n\nlet cssService = require('vscode-css-languageservice');\n\nexport class CssService extends BaseService {\n    $service: VSLanguageService;\n    $languageId: string;\n\n    constructor(mode: string) {\n        super(mode);\n        this.$initLanguageService();\n        this.$service.configure();\n    }\n\n    private $initLanguageService() {\n        switch (this.mode) {\n            case \"ace/mode/less\":\n                this.$languageId = \"less\";\n                this.$service = cssService.getLESSLanguageService();\n                break;\n            case \"ace/mode/scss\":\n                this.$languageId = \"scss\";\n                this.$service = cssService.getSCSSLanguageService();\n                break;\n            case \"ace/mode/css\":\n            default:\n                this.$languageId = \"css\";\n                this.$service = cssService.getCSSLanguageService();\n                break;\n        }\n    }\n\n    $getDocument(sessionID: string) {\n        let documentValue = this.getDocumentValue(sessionID);\n        return cssService.TextDocument.create(\"file://test.html\", this.$languageId, 1, documentValue);\n    }\n\n    format(sessionID: string, range: Ace.Range, format: CSSFormatConfiguration) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return [];\n        }\n        let textEdits = this.$service.format(document, fromRange(range), format);\n        return toAceTextEdits(textEdits);\n    }\n\n    doHover(sessionID: string, position: Ace.Point) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return null;\n        }\n        let cssDocument = this.$service.parseStylesheet(document);\n        let hover = this.$service.doHover(document, fromPoint(position), cssDocument);\n        return Promise.resolve(toTooltip(hover));\n    }\n\n    async doValidation(sessionID: string): Promise<Ace.Annotation[]> {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return [];\n        }\n        let cssDocument = this.$service.parseStylesheet(document);\n\n        let diagnostics = this.$service.doValidation(document, cssDocument);\n        return toAnnotations(diagnostics);\n    }\n\n    async doComplete(sessionID: string, position: Ace.Point) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return null;\n        }\n        let cssDocument = this.$service.parseStylesheet(document);\n\n        let completions = this.$service.doComplete(document, fromPoint(position), cssDocument);\n        return toCompletions(completions);\n    }\n}","import {LanguageService as VSLanguageService} from \"vscode-html-languageservice\";\nimport {Ace} from \"ace-code\";\nimport {fromPoint, fromRange, toAceTextEdits, toCompletions, toTooltip} from \"../../type-converters/vscode-converters\";\nimport {HTMLFormatConfiguration} from \"vscode-html-languageservice/lib/umd/htmlLanguageTypes\";\nimport {BaseService} from \"../base-service\";\n\nlet htmlService = require('vscode-html-languageservice');\n\nexport class HtmlService extends BaseService {\n    $service: VSLanguageService;\n\n    constructor(mode: string) {\n        super(mode);\n        this.$service = htmlService.getLanguageService();\n    }\n\n    $getDocument(sessionID: string) {\n        let documentValue = this.getDocumentValue(sessionID);\n        return htmlService.TextDocument.create(\"file://test.html\", \"html\", 1, documentValue);\n    }\n\n    format(sessionID: string, range: Ace.Range, format: HTMLFormatConfiguration) {\n        let document = this.$getDocument(sessionID);\n        if (!document || !range) {\n            return [];\n        }\n\n        let textEdits = this.$service.format(document, fromRange(range), format);\n        return toAceTextEdits(textEdits);\n    }\n\n    async doHover(sessionID: string, position: Ace.Point) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return null;\n        }\n        let htmlDocument = this.$service.parseHTMLDocument(document);\n        let hover = this.$service.doHover(document, fromPoint(position), htmlDocument);\n        return Promise.resolve(toTooltip(hover));\n    }\n\n    //TODO: separate validator for HTML\n    async doValidation(sessionID: string) {\n        return [];\n    }\n\n    async doComplete(sessionID: string, position: Ace.Point) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return null;\n        }\n        let htmlDocument = this.$service.parseHTMLDocument(document);\n\n        let completions = this.$service.doComplete(document, fromPoint(position), htmlDocument);\n        return toCompletions(completions);\n    }\n}","import {\n    FormattingOptions,\n    JSONSchema,\n    LanguageService as VSLanguageService,\n    SchemaConfiguration\n} from \"vscode-json-languageservice\";\nimport {Ace} from \"ace-code\";\nimport {fromPoint, fromRange, toAceTextEdits, toAnnotations, toCompletions, toTooltip} from \"../../type-converters/vscode-converters\";\nimport {BaseService} from \"../base-service\";\n\nlet jsonService = require('vscode-json-languageservice');\n\nexport class JsonService extends BaseService<JsonServiceOptions> {\n    $service: VSLanguageService;\n    schemas: SchemaConfiguration[] = [];\n\n    constructor(mode: string) {\n        super(mode);\n        this.$service = jsonService.getLanguageService({\n            schemaRequestService: (uri) => {\n                uri = uri.replace(\"file:///\", \"\");\n                let jsonSchema = this.$getJsonSchema(uri);\n                if (jsonSchema)\n                    return Promise.resolve(JSON.stringify(jsonSchema));\n                return Promise.reject(`Unable to load schema at ${uri}`);\n            }\n        });\n        this.$service.configure({allowComments: false})\n    }\n\n    private $getJsonSchema(sessionID): JSONSchema {\n        return this.options[sessionID]?.jsonSchema;\n    }\n\n    addDocument(sessionID: string, document: Ace.Document, options?: JsonServiceOptions) {\n        super.addDocument(sessionID, document, options);\n        this.schemas.push({uri: sessionID, fileMatch: [sessionID]});\n        this.$service.configure({schemas: this.schemas});\n    }\n\n    removeDocument(sessionID: string) {\n        super.removeDocument(sessionID);\n        this.schemas = this.schemas.filter((schema) => schema.uri != sessionID);\n    }\n\n    setOptions(sessionID: string, options: JsonServiceOptions) {\n        super.setOptions(sessionID, options);\n        this.$service.resetSchema(sessionID);\n    }\n\n    $getDocument(sessionID: string) {\n        let documentValue = this.getDocumentValue(sessionID);\n        return jsonService.TextDocument.create(sessionID, \"json\", 1, documentValue);\n    }\n\n    format(sessionID: string, range: Ace.Range, format: FormattingOptions) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return [];\n        }\n        let textEdits = this.$service.format(document, fromRange(range), format);\n        return toAceTextEdits(textEdits);\n    }\n\n    async doHover(sessionID: string, position: Ace.Point) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return null;\n        }\n        let jsonDocument = this.$service.parseJSONDocument(document);\n        let hover = await this.$service.doHover(document, fromPoint(position), jsonDocument);\n        return toTooltip(hover);\n    }\n\n    async doValidation(sessionID: string): Promise<Ace.Annotation[]> {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return [];\n        }\n        let jsonDocument = this.$service.parseJSONDocument(document);\n\n        let diagnostics = this.$service.doValidation(document, jsonDocument, null, this.$getJsonSchema(sessionID));\n        return toAnnotations(await diagnostics);\n    }\n\n    async doComplete(sessionID: string, position: Ace.Point) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return null;\n        }\n        let jsonDocument = this.$service.parseJSONDocument(document);\n        let completions = await this.$service.doComplete(document, fromPoint(position), jsonDocument);\n        return toCompletions(completions);\n    }\n}\n\nexport interface JsonServiceOptions {\n    jsonSchema: JSONSchema\n}","import {AceLinters} from \"./language-service\";\nimport LanguageService = AceLinters.LanguageService;\nimport ServiceOptions = AceLinters.ServiceOptions;\nimport {Document} from \"ace-code/src/document\";\n\nexport class ServiceManager {\n    private static _instance: ServiceManager;\n    private $services: { module: any, name: string, modes: string }[] = [\n        {\n            module: import(\"./html/html-service\"),\n            name: \"HtmlService\",\n            modes: \"html\"\n        },\n        {\n            module: import(\"./css/css-service\"),\n            name: \"CssService\",\n            modes: \"css|less|scss\"\n        },\n        {\n            module: import(\"./json/json-service\"),\n            name: \"JsonService\",\n            modes: \"json\"\n        }\n    ];\n    private $serviceInstances: { [mode: string]: LanguageService } = {};\n    private $sessionIDToMode: {[sessionID: string]: string} = {};\n\n    static get instance() {\n        if (!ServiceManager._instance) {\n            ServiceManager._instance = new ServiceManager();\n        }\n        return ServiceManager._instance;\n    }\n\n    private async $initServiceInstance(mode: string): Promise<LanguageService> {\n        let resolvedMode = mode?.replace(\"ace/mode/\", \"\");\n        try {\n            let service = this.findServiceByMode(resolvedMode);\n            if (!service) {\n                console.log(\"No service registered for \" + resolvedMode);\n                return;\n            }\n            this.$serviceInstances[mode] = new (await service.module)[service.name](mode);\n            return this.$serviceInstances[mode];\n        } catch (e) {\n            throw \"Couldn't resolve language service for \" + resolvedMode;\n        }\n    }\n\n    private async $getServiceInstanceByMode(mode: string): Promise<LanguageService> {\n        if (!this.$serviceInstances[mode]) {\n            await this.$initServiceInstance(mode);\n        }\n        return this.$serviceInstances[mode];\n    }\n\n    async addDocument(sessionID: string, documentValue: string, mode: string, options: ServiceOptions) {\n        if (!mode || !/^ace\\/mode\\//.test(mode))\n            return;\n\n        let document = new Document(documentValue);\n\n        let serviceInstance = await this.$getServiceInstanceByMode(mode);\n        serviceInstance.addDocument(sessionID, document, options);\n\n        this.$sessionIDToMode[sessionID] = mode;\n    }\n\n    async changeDocumentMode(sessionID: string, mode: string, options: ServiceOptions) {\n        let service = this.getServiceInstance(sessionID);\n        let documentValue = service.getDocumentValue(sessionID);\n\n        service.removeDocument(sessionID);\n\n        delete this.$sessionIDToMode[sessionID];\n\n        await this.addDocument(sessionID, documentValue, mode, options);\n    }\n\n    getServiceInstance(sessionID: string): LanguageService {\n        let mode = this.$sessionIDToMode[sessionID];\n        if (!mode || !this.$serviceInstances[mode]) {\n            throw Error(\"No registered service for \" + sessionID);\n        }\n        return this.$serviceInstances[mode];\n    }\n\n    findServiceByMode(mode: string) {\n        return this.$services.find((el) => {\n            let extensions = el.modes.split('|');\n            if (extensions.indexOf(mode) !== -1)\n                return el;\n        })\n    }\n}","import {Ace, Range as AceRange} from \"ace-code\";\n\nexport function toCompletions(completions: Ace.Completion[], markdownConverter: MarkDownConverter): Ace.Completion[] {\n    return completions && completions.map((el) => {\n        if (el[\"docMarkdown\"]) {\n            el[\"docHTML\"] = cleanHtml(markdownConverter.makeHtml(el[\"docMarkdown\"]));\n            el[\"docMarkdown\"] = undefined;\n        }\n        if (el[\"range\"]) {\n            el[\"range\"] = toRange(el[\"range\"]);\n        }\n        return el;\n    })\n}\n\nexport function cleanHtml(html: string) {//TODO: improve this\n    return html.replace(/<a\\s/, \"<a target='_blank' \");\n}\n\nexport function toRange(range: { start, end }): Ace.Range | undefined {\n    if (!range || !range.start || !range.end) {\n        return;\n    }\n    return AceRange.fromPoints(range.start, range.end);\n}\n\nexport enum TooltipType {\n    plainText,\n    markdown\n}","import {\n    Range,\n    Position,\n    Diagnostic,\n    InsertTextFormat,\n    CompletionList,\n    CompletionItemKind, Hover, MarkupContent, MarkedString, MarkupKind, TextEdit\n} from \"vscode-languageserver-types\";\nimport type {Ace} from \"ace-code\";\nimport {Range as AceRange} from \"ace-code/src/range\";\nimport {RangeList} from \"ace-code/src/range_list\";\nimport {AceLinters} from \"../services/language-service\";\nimport Tooltip = AceLinters.Tooltip;\nimport TooltipContent = AceLinters.TooltipContent;\nimport {TooltipType} from \"./common-converters\";\n\nexport function fromRange(range: Ace.Range): Range | undefined {\n    if (!range) {\n        return;\n    }\n    return {\n        start: {\n            line: range.start.row,\n            character: range.start.column\n        },\n        end: {line: range.end.row, character: range.end.column}\n    };\n}\n\nexport function toRange(range: Range): Ace.Range | undefined {\n    if (!range) {\n        return;\n    }\n    return new AceRange(range.start.line, range.start.character, range.end.line, range.end.character);\n}\n\nexport function fromPoint(point: Ace.Point): Position {\n    if (!point) return;\n    return {line: point.row, character: point.column}\n}\n\nexport function toPoint(position: Position): Ace.Point {\n    if (!position) return;\n    return {row: position.line, column: position.character}\n}\n\nexport function toAnnotations(diagnostics: Diagnostic[]): Ace.Annotation[] {\n    return diagnostics && diagnostics.map((el) => {\n        return {\n            row: el.range.start.line,\n            column: el.range.start.character,\n            text: el.message,\n            type: el.severity === 1 ? \"error\" : el.severity === 2 ? \"warning\" : \"info\"\n        };\n    });\n}\n\nexport function toCompletions(completionList: CompletionList): Ace.Completion[] {\n    return completionList && completionList.items.map((item) => {\n            let kind = Object.keys(CompletionItemKind)[Object.values(CompletionItemKind).indexOf(item.kind)];\n            let text = item.textEdit?.newText ?? item.insertText ?? item.label;\n            let command = (item.command?.command == \"editor.action.triggerSuggest\") ? \"startAutocomplete\" : undefined;\n            let range = getTextEditRange(item.textEdit)\n            let completion = {\n                meta: kind,\n                caption: item.label,\n                command: command,\n                range: range,\n                value: \"\",\n                score: null\n            };\n            let doc = fromMarkupContent(item.documentation);\n            if (doc) {\n                if (doc.type === TooltipType.markdown) {\n                    completion[\"docMarkdown\"] = doc.text;\n                } else {\n                    completion[\"docText\"] = doc.text;\n                }\n            }\n            if (item.insertTextFormat == InsertTextFormat.Snippet) {\n                completion[\"snippet\"] = text;\n            } else {\n                completion[\"value\"] = text;\n            }\n            return completion;\n        }\n    );\n}\n\nexport function getTextEditRange(textEdit?): Ace.Range | undefined {\n    if (!textEdit) {\n        return;\n    }\n    if (textEdit.insert != undefined && textEdit.replace != undefined) {\n        let rangeList = new RangeList();\n        rangeList.ranges = [toRange(textEdit.insert), toRange(textEdit.replace)];\n        rangeList.merge();\n        return rangeList[0];\n    }\n    if (textEdit.range) {\n        return toRange(textEdit.range);\n    }\n}\n\nexport function toTooltip(hover: Hover): Tooltip {\n    let content;\n    if (!hover) {\n        return;\n    }\n    if (MarkupContent.is(hover.contents)) {\n        content = fromMarkupContent(hover.contents);\n    } else if (MarkedString.is(hover.contents)) {\n        content = {type: TooltipType.markdown, text: \"```\" + (hover.contents as any).value + \"```\"};\n    } else if (Array.isArray(hover.contents)) {\n        let contents = hover.contents.map((el) => {\n            if (typeof el !== \"string\") {\n                return `\\`\\`\\`${el.value}\\`\\`\\``\n            }\n            return el;\n        });\n        content = {type: TooltipType.markdown, text: contents.join(\"\\n\\n\")};\n    } else {\n        return;\n    }\n    return {content: content, range: toRange(hover.range)};\n}\n\nexport function fromMarkupContent(content?: string | MarkupContent): TooltipContent {\n    if (!content)\n        return;\n    if (typeof content === \"string\") {\n        return {type: TooltipType.plainText, text: content};\n    }\n    if (content.kind === MarkupKind.Markdown) {\n        return {type: TooltipType.markdown, text: content.value};\n    } else {\n        return {type: TooltipType.plainText, text: content.value};\n    }\n}\n\nexport function toAceTextEdits(textEdits: TextEdit[]): AceLinters.TextEdit[] {\n    return textEdits.reverse().map((el) => {\n        return {\n            range: toRange(el.range),\n            newText: el.newText\n        };\n    })\n}\n\n","import {MessageType} from \"./message-types\";\nimport {ServiceManager} from \"./services/service-manager\";\n\nconst ctx: Worker = self as any;\n\nctx.onmessage = async (ev) => {\n    let message = ev.data;\n    let sessionID = message.sessionId;\n    let manager = ServiceManager.instance;\n    let postMessage = {\n        \"type\": message.type,\n        \"sessionId\": sessionID,\n    };\n    switch (message[\"type\"] as MessageType) {\n        case MessageType.format:\n            postMessage[\"edits\"] = manager.getServiceInstance(sessionID).format(sessionID, message.value, message.format);\n            break;\n        case MessageType.complete:\n            postMessage[\"completions\"] = await manager.getServiceInstance(sessionID).doComplete(sessionID, message.value);\n            break;\n        case MessageType.change:\n            manager.getServiceInstance(sessionID).setValue(sessionID, message.value);\n            break;\n        case MessageType.applyDelta:\n            manager.getServiceInstance(sessionID).applyDeltas(sessionID, message.value);\n            break;\n        case MessageType.hover:\n            postMessage[\"hover\"] = await manager.getServiceInstance(sessionID).doHover(sessionID, message.value);\n            break;\n        case MessageType.validate:\n            postMessage[\"annotations\"] = await manager.getServiceInstance(sessionID).doValidation(sessionID);\n            break;\n        case MessageType.init: //this should be first message\n            await manager.addDocument(sessionID, message.value, message.mode, message.options);\n            break;\n        case MessageType.changeMode:\n            await manager.changeDocumentMode(sessionID, message.mode, message.options);\n            break;\n        case MessageType.changeOptions:\n            manager.getServiceInstance(sessionID).setOptions(sessionID, message.options);\n            break;\n    }\n\n    ctx.postMessage(postMessage);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [937], () => (__webpack_require__(8979)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t411: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkace_linters\"] = self[\"webpackChunkace_linters\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(937).then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":[],"sourceRoot":""}