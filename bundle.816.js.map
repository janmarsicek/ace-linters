{"version":3,"file":"bundle.816.js","mappings":"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CtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack://ace-linters-root/./packages/ace-linters/utils.ts","webpack://ace-linters-root/./packages/ace-linters/services/base-service.ts","webpack://ace-linters-root/./packages/ace-linters/services/json/json-service.ts","webpack://ace-linters-root/./packages/demo/webworker-json-rpc/webworker.ts","webpack://ace-linters-root/webpack/bootstrap","webpack://ace-linters-root/webpack/runtime/chunk loaded","webpack://ace-linters-root/webpack/runtime/define property getters","webpack://ace-linters-root/webpack/runtime/ensure chunk","webpack://ace-linters-root/webpack/runtime/get javascript chunk filename","webpack://ace-linters-root/webpack/runtime/global","webpack://ace-linters-root/webpack/runtime/hasOwnProperty shorthand","webpack://ace-linters-root/webpack/runtime/make namespace object","webpack://ace-linters-root/webpack/runtime/publicPath","webpack://ace-linters-root/webpack/runtime/importScripts chunk loading","webpack://ace-linters-root/webpack/runtime/startup chunk dependencies","webpack://ace-linters-root/webpack/before-startup","webpack://ace-linters-root/webpack/startup","webpack://ace-linters-root/webpack/after-startup"],"sourcesContent":["export function mergeObjects(obj1, obj2) {\n    if (!obj1) return obj2;\n    if (!obj2) return obj1;\n    const mergedObjects = {};\n    for (const key of [...Object.keys(obj1), ...Object.keys(obj2)]) {\n        if (obj1[key] && obj2[key]) {\n            if (Array.isArray(obj1[key])) {\n                mergedObjects[key] = obj1[key].concat(obj2[key]);\n            } else {\n                mergedObjects[key] = mergeObjects(obj1[key], obj2[key]);\n            }\n        } else {\n            mergedObjects[key] = obj1[key] ?? obj2[key];\n        }\n    }\n    return mergedObjects;\n}\n","import * as lsp from \"vscode-languageserver-protocol\";\nimport {AceLinters} from \"../types\";\nimport {mergeObjects} from \"../utils\";\nimport {TextDocument} from \"vscode-languageserver-textdocument\";\n\nexport abstract class BaseService<OptionsType extends AceLinters.ServiceOptions = AceLinters.ServiceOptions> implements AceLinters.LanguageService {\n    abstract $service;\n    mode: string;\n    documents: { [sessionID: string]: TextDocument } = {};\n    options: { [sessionID: string]: OptionsType } = {};\n    globalOptions: OptionsType = {} as OptionsType;\n\n    protected constructor(mode: string) {\n        this.mode = mode;\n    }\n\n    addDocument(document: lsp.TextDocumentItem) {\n        this.documents[document.uri] = TextDocument.create(document.uri, document.languageId, document.version,\n            (document as lsp.TextDocumentItem).text)\n        //TODO:\n        /*if (options)\n            this.setOptions(sessionID, options);*/\n    }\n\n    getDocument(uri: string): TextDocument {\n        return this.documents[uri];\n    }\n\n    removeDocument(document: lsp.TextDocumentIdentifier) {\n        delete this.documents[document.uri];\n        if (this.options[document.uri]) {\n            delete this.options[document.uri];\n        }\n    }\n\n    getDocumentValue(uri: string): string {\n        return this.getDocument(uri).getText();\n    }\n\n    setValue(identifier: lsp.VersionedTextDocumentIdentifier, value: string) {\n        let document = this.getDocument(identifier.uri);\n        if (document) {\n            document = TextDocument.create(document.uri, document.languageId, document.version, value);\n            this.documents[document.uri] = document;\n        }\n    }\n\n    setGlobalOptions(options: OptionsType) {\n        this.globalOptions = options ?? {} as OptionsType;\n    }\n\n    setOptions(sessionID: string, options: OptionsType, merge = false) {\n        this.options[sessionID] = merge ? mergeObjects(options, this.options[sessionID]) : options;\n    }\n\n    getOption<T extends keyof OptionsType>(sessionID: string, optionName: T): OptionsType[T] {\n        if (this.options[sessionID] && this.options[sessionID][optionName]) {\n            return this.options[sessionID][optionName];\n        } else {\n            return this.globalOptions[optionName];\n        }\n    }\n\n    applyDeltas(identifier: lsp.VersionedTextDocumentIdentifier, deltas: lsp.TextDocumentContentChangeEvent[]) {\n        let document = this.getDocument(identifier.uri);\n        if (document)\n            TextDocument.update(document, deltas, identifier.version);\n    }\n\n    async doComplete(document, position: lsp.Position): Promise<lsp.CompletionItem[] | lsp.CompletionList | null> {\n        return null;\n    }\n\n    async doHover(document, position: lsp.Position): Promise<lsp.Hover | null> {\n        return null;\n    }\n\n    async doResolve(item: lsp.CompletionItem): Promise<lsp.CompletionItem | null> {\n        return null;\n    }\n\n    async doValidation(document): Promise<lsp.Diagnostic[]> {\n        return [];\n    }\n\n    format(document, range: lsp.Range, options: lsp.FormattingOptions): lsp.TextEdit[] {\n        return [];\n    }\n\n}\n","import {\n    LanguageService as VSLanguageService,\n    SchemaConfiguration\n} from \"vscode-json-languageservice\";\nimport {BaseService} from \"../base-service\";\nimport JsonServiceOptions = AceLinters.JsonServiceOptions;\nimport {AceLinters} from \"../../types\";\nimport * as lsp from \"vscode-languageserver-protocol\";\n\nimport * as jsonService from 'vscode-json-languageservice';\nimport {TextDocumentIdentifier, TextDocumentItem} from \"vscode-languageserver-protocol\";\n\nexport class JsonService extends BaseService<JsonServiceOptions> implements AceLinters.LanguageService {\n    $service: VSLanguageService;\n    schemas: { [schemaUri: string]: string } = {};\n\n    constructor(mode: string) {\n        super(mode);\n        this.$service = jsonService.getLanguageService({\n            schemaRequestService: (uri) => {\n                uri = uri.replace(\"file:///\", \"\");\n                let jsonSchema = this.schemas[uri];\n                if (jsonSchema)\n                    return Promise.resolve(jsonSchema);\n                return Promise.reject(`Unable to load schema at ${uri}`);\n            }\n        });\n    }\n\n    private $getJsonSchemaUri(sessionID): string | undefined {\n        return this.getOption(sessionID, \"schemaUri\");\n    }\n\n    addDocument(document: TextDocumentItem) {\n        super.addDocument(document);\n        this.$configureService(document.uri);\n    }\n\n    private $configureService(sessionID: string) {\n        let schemas = this.getOption(sessionID, \"schemas\");\n        schemas?.forEach((el) => {\n            if (el.uri === this.$getJsonSchemaUri(sessionID)) {\n                el.fileMatch ??= [];\n                el.fileMatch.push(sessionID);\n            }\n            let schema = el.schema ?? this.schemas[el.uri];\n            if (schema)\n                this.schemas[el.uri] = schema;\n            this.$service.resetSchema(el.uri);\n            el.schema = undefined;\n        });\n\n        this.$service.configure({\n            schemas: schemas as SchemaConfiguration[],\n            allowComments: this.mode === \"json5\"\n        });\n\n    }\n\n    removeDocument(document: TextDocumentIdentifier) {\n        super.removeDocument(document);\n        let schemas = this.getOption(document.uri, \"schemas\");\n        schemas?.forEach((el) => {\n            if (el.uri === this.$getJsonSchemaUri(document.uri)) {\n                el.fileMatch = el.fileMatch?.filter((pattern) => pattern != document.uri);\n            }\n        });\n        this.$service.configure({\n            schemas: schemas as SchemaConfiguration[],\n            allowComments: this.mode === \"json5\"\n        });\n    }\n\n    setOptions(sessionID: string, options: JsonServiceOptions, merge = false) {\n        super.setOptions(sessionID, options, merge);\n        this.$configureService(sessionID);\n    }\n\n    setGlobalOptions(options: JsonServiceOptions) {\n        super.setGlobalOptions(options);\n        this.$configureService(\"\");\n    }\n\n    format(document: lsp.TextDocumentIdentifier, range: lsp.Range, options: lsp.FormattingOptions): lsp.TextEdit[] {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return [];\n\n        return this.$service.format(fullDocument, range, options);\n    }\n\n    async doHover(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.Hover | null> {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return null;\n\n        let jsonDocument = this.$service.parseJSONDocument(fullDocument);\n        return this.$service.doHover(fullDocument, position, jsonDocument);\n    }\n\n    async doValidation(document: lsp.TextDocumentIdentifier): Promise<lsp.Diagnostic[]> {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return [];\n\n        let jsonDocument = this.$service.parseJSONDocument(fullDocument);\n        return this.$service.doValidation(fullDocument, jsonDocument, {trailingCommas: this.mode === \"json5\" ? \"ignore\" : \"error\"});\n    }\n\n    async doComplete(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.CompletionItem[] | lsp.CompletionList | null> {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return null;\n\n        let jsonDocument = this.$service.parseJSONDocument(fullDocument);\n        return this.$service.doComplete(fullDocument, position, jsonDocument);\n    }\n\n    async doResolve(item: lsp.CompletionItem): Promise<lsp.CompletionItem> {\n        return this.$service.doResolve(item);\n    }\n}\n","import {\n    createProtocolConnection,\n    BrowserMessageReader,\n    BrowserMessageWriter,\n} from \"vscode-languageserver-protocol/browser\";\nimport {\n    CompletionRequest,\n    CompletionResolveRequest,\n    DidChangeTextDocumentNotification,\n    DidOpenTextDocumentNotification,\n    HoverRequest,\n    HoverParams,\n    InitializeRequest,\n    InitializeResult,\n    TextDocumentSyncKind,\n    CompletionItem,\n    DidOpenTextDocumentParams,\n    DidChangeTextDocumentParams,\n    CompletionParams,\n    DocumentRangeFormattingRequest,\n    DocumentRangeFormattingParams,\n    PublishDiagnosticsNotification,\n    Diagnostic,\n    TextDocument\n} from \"vscode-languageserver-protocol\";\nimport {JsonService} from \"ace-linters/services/json/json-service\";\n\nconst worker: Worker = self as any;\nconst conn = createProtocolConnection(\n    new BrowserMessageReader(worker),\n    new BrowserMessageWriter(worker)\n);\n\nlet jsonService = new JsonService(\"json\");\nconn.onRequest(InitializeRequest.type, (_params): InitializeResult => {\n    return {\n        capabilities: {\n            textDocumentSync: TextDocumentSyncKind.Incremental,\n            completionProvider: {\n                resolveProvider: true,\n            },\n            hoverProvider: true,\n        },\n    };\n});\nconn.onNotification(\n    DidOpenTextDocumentNotification.type,\n    (params: DidOpenTextDocumentParams) => {\n        jsonService.addDocument(params.textDocument);\n        doValidation(params.textDocument);\n    }\n);\nconn.onNotification(\n    DidChangeTextDocumentNotification.type,\n    (params: DidChangeTextDocumentParams) => {\n        jsonService.applyDeltas(params.textDocument, params.contentChanges);\n        doValidation(params.textDocument);\n    }\n);\nconn.onRequest(CompletionRequest.type, async (params: CompletionParams) => {\n    return jsonService.doComplete(\n        params.textDocument, params.position\n    );\n});\nconn.onRequest(HoverRequest.type, async (params: HoverParams) => {\n    return jsonService.doHover(params.textDocument, params.position);\n});\nconn.onRequest(CompletionResolveRequest.type, async (item: CompletionItem) => {\n    return jsonService.doResolve(item);\n});\nconn.onRequest(DocumentRangeFormattingRequest.type, async (params: DocumentRangeFormattingParams) => {\n    return jsonService.format(params.textDocument, params.range, params.options);\n});\n\nconn.listen();\n\nasync function doValidation(document) {\n    let diagnostics = await jsonService.doValidation(document);\n    sendDiagnostics(document, diagnostics);\n}\n\nfunction sendDiagnostics(document: TextDocument, diagnostics: Diagnostic[]): void {\n    conn.sendNotification(PublishDiagnosticsNotification.type, {\n        uri: document.uri, diagnostics\n    })\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [152,516,2,259], () => (__webpack_require__(8816)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t816: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkace_linters_root\"] = self[\"webpackChunkace_linters_root\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([152,516,2,259].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":[],"sourceRoot":""}