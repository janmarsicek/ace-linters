{"version":3,"file":"bundle.211.js","mappings":"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","sources":["webpack://ace-linters-root/./node_modules/ace-code/src/ sync","webpack://ace-linters-root/./packages/ace-linters/services/base-service.ts","webpack://ace-linters-root/./packages/ace-linters/services/json/json-service.ts","webpack://ace-linters-root/./packages/ace-linters/type-converters/common-converters.ts","webpack://ace-linters-root/./packages/ace-linters/type-converters/vscode-converters.ts"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 2126;\nmodule.exports = webpackEmptyContext;","import {FormattingOptions} from \"vscode-languageserver-types\";\nimport {Ace} from \"ace-code\";\nimport {AceLinters} from \"./language-service\";\n\nexport abstract class BaseService<OptionsType extends AceLinters.ServiceOptions = AceLinters.ServiceOptions> implements AceLinters.LanguageService {\n    abstract $service;\n    mode: string;\n    documents: {[sessionID: string]: Ace.Document} = {};\n    options: {[sessionID: string]: OptionsType} = {};\n    globalOptions: OptionsType = {} as OptionsType;\n\n    protected constructor(mode: string) {\n        this.mode = mode;\n    }\n\n    $getDocument(sessionID: string) {\n        return null;\n    }\n\n    addDocument(sessionID: string, document: Ace.Document, options?: OptionsType) {\n        this.documents[sessionID] = document;\n        if (options)\n            this.setOptions(sessionID, options);\n    }\n\n    getDocument(sessionID: string): Ace.Document {\n        return this.documents[sessionID];\n    }\n\n    removeDocument(sessionID: string) {\n        delete this.documents[sessionID];\n        if (this.options[sessionID]) {\n            delete this.options[sessionID];\n        }\n    }\n\n    getDocumentValue(sessionID: string): string {\n        return this.getDocument(sessionID).getValue();\n    }\n\n    private $setVersion(doc: Ace.Document) { //TODO: this is workaround for ts service\n        if (!doc[\"version\"]) {\n            doc[\"version\"] = 1;\n        } else {\n            doc[\"version\"]++;\n        }\n    }\n\n    setValue(sessionID: string, value: string) {\n        let document = this.getDocument(sessionID);\n        this.$setVersion(document);\n        document.setValue(value);\n    }\n\n    setGlobalOptions(options: OptionsType) {\n        this.globalOptions = options ?? {} as OptionsType;\n    }\n\n    setOptions(sessionID: string, options: OptionsType) {\n        this.options[sessionID] = options;\n    }\n\n    getOption<T extends keyof OptionsType>(sessionID: string, optionName: T): OptionsType[T] {\n        if (this.options[sessionID] && this.options[sessionID][optionName]) {\n            return this.options[sessionID][optionName];\n        } else {\n            return this.globalOptions[optionName];\n        }\n    }\n\n    applyDeltas(sessionID: string, deltas: Ace.Delta[]) {\n        let data = deltas;\n        let document = this.getDocument(sessionID);\n        this.$setVersion(document);\n        if (data[0].start) {\n            document.applyDeltas(data);\n        } else {\n            for (let i = 0; i < data.length; i += 2) {\n                let d, err;\n                if (Array.isArray(data[i + 1])) {\n                    d = {action: \"insert\", start: data[i], lines: data[i + 1]};\n                } else {\n                    d = {action: \"remove\", start: data[i], end: data[i + 1]};\n                }\n\n                let linesLength = document[\"$lines\"].length;\n                if ((d.action == \"insert\" ? d.start : d.end).row >= linesLength) {\n                    err = new Error(\"Invalid delta\");\n                    err.data = {\n                        linesLength: linesLength,\n                        start: d.start,\n                        end: d.end\n                    };\n                    throw err;\n                }\n\n                document.applyDelta(d, true);\n            }\n        }\n    }\n\n    format(sessionID: string, range: Ace.Range, format: FormattingOptions): AceLinters.TextEdit[] {\n        return [];\n    }\n\n    async doHover(sessionID: string, position: Ace.Point) {\n        return null;\n    }\n\n    async doValidation(sessionID: string): Promise<Ace.Annotation[]> {\n        return [];\n    }\n\n    async doComplete(sessionID: string, position: Ace.Point): Promise<Ace.Completion[]> {\n        return;\n    }\n\n    async resolveCompletion(sessionID: string, completion: Ace.Completion): Promise<Ace.Completion> {\n        return;\n    }\n}","import {\n    FormattingOptions,\n    LanguageService as VSLanguageService,\n    SchemaConfiguration\n} from \"vscode-json-languageservice\";\nimport {Ace} from \"ace-code\";\nimport {\n    fromPoint,\n    fromRange,\n    toAceTextEdits,\n    toAnnotations,\n    toCompletions, toResolvedCompletion,\n    toTooltip\n} from \"../../type-converters/vscode-converters\";\nimport {BaseService} from \"../base-service\";\nimport JsonServiceOptions = AceLinters.JsonServiceOptions;\nimport {AceLinters} from \"../language-service\";\n\nlet jsonService = require('vscode-json-languageservice');\n\nexport class JsonService extends BaseService<JsonServiceOptions> {\n    $service: VSLanguageService;\n    schemas: { [schemaUri: string]: string } = {};\n\n    constructor(mode: string) {\n        super(mode);\n        this.$service = jsonService.getLanguageService({\n            schemaRequestService: (uri) => {\n                uri = uri.replace(\"file:///\", \"\");\n                let jsonSchema = this.schemas[uri];\n                if (jsonSchema)\n                    return Promise.resolve(jsonSchema);\n                return Promise.reject(`Unable to load schema at ${uri}`);\n            }\n        });\n    }\n\n    private $getJsonSchemaUri(sessionID): string {\n        return this.getOption(sessionID, \"jsonSchemaUri\");\n    }\n\n    addDocument(sessionID: string, document: Ace.Document, options?: JsonServiceOptions) {\n        super.addDocument(sessionID, document, options);\n        this.$configureService(sessionID);\n    }\n\n    private $configureService(sessionID?: string) {\n        if (!sessionID)\n            sessionID = \"\";\n        let schemas = this.getOption(sessionID, \"jsonSchemas\");\n        schemas?.forEach((el) => {\n            if (el.uri === this.$getJsonSchemaUri(sessionID)) {\n                el.fileMatch ??= [];\n                el.fileMatch.push(sessionID);\n            }\n            this.schemas[el.uri] = (el.schema) ? el.schema : (this.schemas[el.uri]) ? this.schemas[el.uri] : undefined;\n            this.$service.resetSchema(el.uri);\n            el.schema = undefined;\n        });\n\n        this.$service.configure({\n            schemas: schemas as SchemaConfiguration[],\n            allowComments: this.mode === \"json5\"\n        });\n\n    }\n\n    removeDocument(sessionID: string) {\n        super.removeDocument(sessionID);\n        let schemas = this.getOption(sessionID, \"jsonSchemas\");\n        schemas?.forEach((el) => {\n            if (el.uri === this.$getJsonSchemaUri(sessionID)) {\n                el.fileMatch = el.fileMatch.filter((pattern) => pattern != sessionID);\n            }\n        });\n        this.$service.configure({\n            schemas: schemas as SchemaConfiguration[],\n            allowComments: this.mode === \"json5\"\n        });\n    }\n\n    setOptions(sessionID: string, options: JsonServiceOptions) {\n        super.setOptions(sessionID, options);\n        this.$configureService(sessionID);\n    }\n\n    setGlobalOptions(options: JsonServiceOptions) {\n        super.setGlobalOptions(options);\n        this.$configureService();\n    }\n\n    $getDocument(sessionID: string) {\n        let documentValue = this.getDocumentValue(sessionID);\n        return jsonService.TextDocument.create(sessionID, \"json\", 1, documentValue);\n    }\n\n    format(sessionID: string, range: Ace.Range, format: FormattingOptions) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return [];\n        }\n        let textEdits = this.$service.format(document, fromRange(range), format);\n        return toAceTextEdits(textEdits);\n    }\n\n    async doHover(sessionID: string, position: Ace.Point) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return null;\n        }\n        let jsonDocument = this.$service.parseJSONDocument(document);\n        let hover = await this.$service.doHover(document, fromPoint(position), jsonDocument);\n        return toTooltip(hover);\n    }\n\n    async doValidation(sessionID: string): Promise<Ace.Annotation[]> {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return [];\n        }\n        let jsonDocument = this.$service.parseJSONDocument(document);\n\n        let diagnostics = this.$service.doValidation(document, jsonDocument, {trailingCommas: this.mode === \"json5\" ? \"ignore\" : \"error\"});\n        return toAnnotations(await diagnostics);\n    }\n\n    async doComplete(sessionID: string, position: Ace.Point) {\n        let document = this.$getDocument(sessionID);\n        if (!document) {\n            return null;\n        }\n        let jsonDocument = this.$service.parseJSONDocument(document);\n        let completions = await this.$service.doComplete(document, fromPoint(position), jsonDocument);\n\n        return toCompletions(completions);\n    }\n\n    async resolveCompletion(sessionID: string, completion: Ace.Completion): Promise<Ace.Completion> {\n        let resolvedCompletion = await this.$service.doResolve(completion[\"item\"]);\n\n        return toResolvedCompletion(completion, resolvedCompletion);\n    }\n}","import {Ace, Range as AceRange} from \"ace-code\";\n\nexport namespace CommonConverter {\n    export function normalizeRanges(completions: Ace.Completion[]): Ace.Completion[] {\n        return completions && completions.map((el) => {\n            if (el[\"range\"]) {\n                el[\"range\"] = toRange(el[\"range\"]);\n            }\n            return el;\n        })\n    }\n\n    export function cleanHtml(html: string) {//TODO: improve this\n        return html.replace(/<a\\s/, \"<a target='_blank' \");\n    }\n\n    export function toRange(range: { start, end }): Ace.Range | undefined {\n        if (!range || !range.start || !range.end) {\n            return;\n        }\n        return AceRange.fromPoints(range.start, range.end);\n    }\n\n    export enum TooltipType {\n        plainText,\n        markdown\n    }\n}\n","import {\n    Range,\n    Position,\n    Diagnostic,\n    InsertTextFormat,\n    CompletionList,\n    CompletionItem,\n    CompletionItemKind, Hover, MarkupContent, MarkedString, MarkupKind, TextEdit\n} from \"vscode-languageserver-types\";\nimport type {Ace} from \"ace-code\";\nimport {Range as AceRange} from \"ace-code/src/range\";\nimport {RangeList} from \"ace-code/src/range_list\";\nimport {AceLinters} from \"../services/language-service\";\nimport Tooltip = AceLinters.Tooltip;\nimport TooltipContent = AceLinters.TooltipContent;\nimport {CommonConverter} from \"./common-converters\";\n\n\nexport function fromRange(range: Ace.Range): Range | undefined {\n    if (!range) {\n        return;\n    }\n    return {\n        start: {\n            line: range.start.row,\n            character: range.start.column\n        },\n        end: {line: range.end.row, character: range.end.column}\n    };\n}\n\nexport function toRange(range: Range): Ace.Range | undefined {\n    if (!range) {\n        return;\n    }\n    return new AceRange(range.start.line, range.start.character, range.end.line, range.end.character);\n}\n\nexport function fromPoint(point: Ace.Point): Position {\n    if (!point) return;\n    return {line: point.row, character: point.column}\n}\n\nexport function toPoint(position: Position): Ace.Point {\n    if (!position) return;\n    return {row: position.line, column: position.character}\n}\n\nexport function toAnnotations(diagnostics: Diagnostic[]): Ace.Annotation[] {\n    return diagnostics && diagnostics.map((el) => {\n        return {\n            row: el.range.start.line,\n            column: el.range.start.character,\n            text: el.message,\n            type: el.severity === 1 ? \"error\" : el.severity === 2 ? \"warning\" : \"info\"\n        };\n    });\n}\n\nexport function toCompletions(completionList: CompletionList): Ace.Completion[] {\n    return completionList && completionList.items.map((item) => {\n            let kind = Object.keys(CompletionItemKind)[Object.values(CompletionItemKind).indexOf(item.kind)];\n            let text = item.textEdit?.newText ?? item.insertText ?? item.label;\n            let command = (item.command?.command == \"editor.action.triggerSuggest\") ? \"startAutocomplete\" : undefined;\n            let range = getTextEditRange(item.textEdit)\n            let completion = {\n                meta: kind,\n                caption: item.label,\n                command: command,\n                range: range,\n                value: \"\",\n                score: null,\n                item: item\n            };\n\n            if (item.insertTextFormat == InsertTextFormat.Snippet) {\n                completion[\"snippet\"] = text;\n            } else {\n                completion[\"value\"] = text;\n            }\n            return completion;\n        }\n    );\n}\n\nexport function toResolvedCompletion(completion: Ace.Completion, item: CompletionItem): Ace.Completion {\n    let doc = fromMarkupContent(item.documentation);\n    if (doc) {\n        if (doc.type === CommonConverter.TooltipType.markdown) {\n            completion[\"docMarkdown\"] = doc.text;\n        } else {\n            completion[\"docText\"] = doc.text;\n        }\n    }\n    return completion;\n}\n\nexport function getTextEditRange(textEdit?): Ace.Range | undefined {\n    if (!textEdit) {\n        return;\n    }\n    if (textEdit.insert != undefined && textEdit.replace != undefined) {\n        let rangeList = new RangeList();\n        rangeList.ranges = [toRange(textEdit.insert), toRange(textEdit.replace)];\n        rangeList.merge();\n        return rangeList[0];\n    }\n    if (textEdit.range) {\n        return toRange(textEdit.range);\n    }\n}\n\nexport function toTooltip(hover: Hover): Tooltip {\n    let content;\n    if (!hover) {\n        return;\n    }\n    if (MarkupContent.is(hover.contents)) {\n        content = fromMarkupContent(hover.contents);\n    } else if (MarkedString.is(hover.contents)) {\n        content = {type: CommonConverter.TooltipType.markdown, text: \"```\" + (hover.contents as any).value + \"```\"};\n    } else if (Array.isArray(hover.contents)) {\n        let contents = hover.contents.map((el) => {\n            if (typeof el !== \"string\") {\n                return `\\`\\`\\`${el.value}\\`\\`\\``\n            }\n            return el;\n        });\n        content = {type: CommonConverter.TooltipType.markdown, text: contents.join(\"\\n\\n\")};\n    } else {\n        return;\n    }\n    return {content: content, range: toRange(hover.range)};\n}\n\nexport function fromMarkupContent(content?: string | MarkupContent): TooltipContent {\n    if (!content)\n        return;\n    if (typeof content === \"string\") {\n        return {type: CommonConverter.TooltipType.plainText, text: content};\n    }\n    if (content.kind === MarkupKind.Markdown) {\n        return {type: CommonConverter.TooltipType.markdown, text: content.value};\n    } else {\n        return {type: CommonConverter.TooltipType.plainText, text: content.value};\n    }\n}\n\nexport function toAceTextEdits(textEdits: TextEdit[]): AceLinters.TextEdit[] {\n    return textEdits.reverse().map((el) => {\n        return {\n            range: toRange(el.range),\n            newText: el.newText\n        };\n    })\n}\n\n"],"names":[],"sourceRoot":""}