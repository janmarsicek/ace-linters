{"version":3,"file":"bundle.178.js","mappings":"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tD,SAAS,EAAE,YAAY;IACvB,KAAK,EAAE,MAAM;CAChB,CAAC,CAAC;AACH,OAAO,CAAC,eAAe,CAAC,MAAM,EAAE;IAC5B,MAAM,EAAE,qMAA8C;IACtD,SAAS,EAAE,YAAY;IACvB,KAAK,EAAE,MAAM;CAChB,CAAC,CAAC;AACH,OAAO,CAAC,eAAe,CAAC,MAAM,EAAE;IAC5B,MAAM,EAAE,qMAAgD;IACxD,SAAS,EAAE,aAAa;IACxB,KAAK,EAAE,MAAM;CAChB,CAAC,CAAC;AACH,OAAO,CAAC,eAAe,CAAC,OAAO,EAAE;IAC7B,MAAM,EAAE,qMAAgD;IACxD,SAAS,EAAE,aAAa;IACxB,KAAK,EAAE,OAAO;CACjB,CAAC,CAAC;AACH,OAAO,CAAC,eAAe,CAAC,YAAY,EAAE;IAClC,MAAM,EAAE,6IAA4D;IACpE,SAAS,EAAE,mBAAmB;IAC9B,KAAK,EAAE,+BAA+B;CACzC,CAAC,CAAC;AACH,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE;IAC3B,MAAM,EAAE,6IAA8C;IACtD,SAAS,EAAE,YAAY;IACvB,KAAK,EAAE,KAAK;CACf,CAAC,CAAC;;;;;;;UC1CH;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;WCrCA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack://ace-linters-root/./packages/ace-linters/utils.ts","webpack://ace-linters-root/./packages/ace-linters/message-types.ts","webpack://ace-linters-root/./packages/ace-linters/services/service-manager.ts","webpack://ace-linters-root/./packages/demo/webworker-lsp/webworker.ts","webpack://ace-linters-root/webpack/bootstrap","webpack://ace-linters-root/webpack/runtime/chunk loaded","webpack://ace-linters-root/webpack/runtime/compat get default export","webpack://ace-linters-root/webpack/runtime/define property getters","webpack://ace-linters-root/webpack/runtime/ensure chunk","webpack://ace-linters-root/webpack/runtime/get javascript chunk filename","webpack://ace-linters-root/webpack/runtime/global","webpack://ace-linters-root/webpack/runtime/hasOwnProperty shorthand","webpack://ace-linters-root/webpack/runtime/make namespace object","webpack://ace-linters-root/webpack/runtime/node module decorator","webpack://ace-linters-root/webpack/runtime/publicPath","webpack://ace-linters-root/webpack/runtime/importScripts chunk loading","webpack://ace-linters-root/webpack/runtime/startup chunk dependencies","webpack://ace-linters-root/webpack/before-startup","webpack://ace-linters-root/webpack/startup","webpack://ace-linters-root/webpack/after-startup"],"sourcesContent":["export function mergeObjects(obj1, obj2) {\n    if (!obj1) return obj2;\n    if (!obj2) return obj1;\n    const mergedObjects = {};\n    for (const key of [...Object.keys(obj1), ...Object.keys(obj2)]) {\n        if (obj1[key] && obj2[key]) {\n            if (Array.isArray(obj1[key])) {\n                mergedObjects[key] = obj1[key].concat(obj2[key]);\n            } else {\n                mergedObjects[key] = mergeObjects(obj1[key], obj2[key]);\n            }\n        } else {\n            mergedObjects[key] = obj1[key] ?? obj2[key];\n        }\n    }\n    return mergedObjects;\n}\n","import {Ace} from \"ace-code\";\nimport {FormattingOptions} from \"vscode-languageserver-protocol\";\nimport {AceLinters} from \"./types\";\nimport ServiceOptions = AceLinters.ServiceOptions;\n\nexport abstract class BaseMessage {\n    abstract type: MessageType;\n    sessionId: string;\n\n    protected constructor(sessionId) {\n        this.sessionId = sessionId;\n    }\n}\n\nexport class InitMessage extends BaseMessage {\n    type: MessageType = MessageType.init;\n    mode: string;\n    options: { [key: string]: any };\n    value: string;\n\n    constructor(sessionId: string, value: string, mode: string, options: { [p: string]: any }) {\n        super(sessionId);\n        this.options = options;\n        this.mode = mode;\n        this.value = value;\n    }\n}\n\nexport class FormatMessage extends BaseMessage {\n    type: MessageType = MessageType.format;\n    value: Ace.Range;\n    format: FormattingOptions;\n\n    constructor(sessionId: string, value: Ace.Range, format) {\n        super(sessionId);\n        this.value = value;\n        this.format = format;\n    }\n}\n\nexport class CompleteMessage extends BaseMessage {\n    type: MessageType = MessageType.complete;\n    value: Ace.Point;\n\n    constructor(sessionId: string, value: Ace.Point) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class ResolveCompletionMessage extends BaseMessage {\n    type: MessageType = MessageType.resolveCompletion;\n    value: Ace.Completion;\n\n    constructor(sessionId: string, value: Ace.Completion) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class HoverMessage extends BaseMessage {\n    type: MessageType = MessageType.hover;\n    value: Ace.Point;\n\n    constructor(sessionId: string, value: Ace.Point) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class ValidateMessage extends BaseMessage {\n    type: MessageType = MessageType.validate;\n\n    constructor(sessionId: string) {\n        super(sessionId);\n    }\n}\n\nexport class ChangeMessage extends BaseMessage {\n    type: MessageType = MessageType.change;\n    value: string;\n\n    constructor(sessionId: string, value: string) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class DeltasMessage extends BaseMessage {\n    type: MessageType = MessageType.applyDelta;\n    value: Ace.Delta[];\n\n    constructor(sessionId: string, value: Ace.Delta[]) {\n        super(sessionId);\n        this.value = value;\n    }\n}\n\nexport class ChangeModeMessage extends BaseMessage {\n    type: MessageType = MessageType.changeMode;\n    mode: string;\n    options: ServiceOptions;\n    value: string;\n\n    constructor(sessionId: string, value: string, mode: string, options: ServiceOptions) {\n        super(sessionId);\n        this.value = value;\n        this.mode = mode;\n        this.options = options;\n    }\n}\n\nexport class ChangeOptionsMessage extends BaseMessage {\n    type: MessageType = MessageType.changeOptions;\n    options: ServiceOptions;\n\n    constructor(sessionId: string, options: ServiceOptions) {\n        super(sessionId);\n        this.options = options;\n    }\n}\n\nexport class DisposeMessage extends BaseMessage {\n    type: MessageType = MessageType.dispose;\n\n    constructor(sessionId: string) {\n        super(sessionId);\n    }\n}\n\nexport class GlobalOptionsMessage {\n    type: MessageType = MessageType.globalOptions;\n    serviceName: string\n    options: ServiceOptions;\n    merge: boolean\n\n    constructor(serviceName: string, options: ServiceOptions, merge: boolean) {\n        this.serviceName = serviceName;\n        this.options = options;\n        this.merge = merge;\n    }\n}\n\nexport enum MessageType {\n    init, format, complete, resolveCompletion, change, hover, validate, applyDelta, changeMode, changeOptions, dispose, globalOptions\n}\n","import LanguageService = AceLinters.LanguageService;\nimport ServiceOptions = AceLinters.ServiceOptions;\nimport {Document} from \"ace-code/src/document\";\nimport {AceLinters} from \"../types\";\nimport {mergeObjects} from \"../utils\";\nimport {MessageType} from \"../message-types\";\n\ninterface ServiceData {\n    module: any,\n    className: string,\n    modes: string,\n    serviceInstance?: LanguageService,\n    options?: ServiceOptions\n}\n\nexport class ServiceManager {\n    private $services: { [serviceName: string]: ServiceData } = {};\n    private $sessionIDToMode: { [sessionID: string]: string } = {};\n\n    constructor(ctx) {\n        ctx.addEventListener(\"message\", async (ev) => {\n            let message = ev.data;\n            let sessionID = message.sessionId;\n            let postMessage = {\n                \"type\": message.type,\n                \"sessionId\": sessionID,\n            };\n            switch (message[\"type\"] as MessageType) {\n                case MessageType.format:\n                    postMessage[\"value\"] = this.getServiceInstance(sessionID)?.format(sessionID, message.value, message.format);\n                    break;\n                case MessageType.complete:\n                    postMessage[\"value\"] = await this.getServiceInstance(sessionID)?.doComplete(sessionID, message.value);\n                    break;\n                case MessageType.resolveCompletion:\n                    postMessage[\"value\"] = await this.getServiceInstance(sessionID)?.resolveCompletion(sessionID, message.value);\n                    break;\n                case MessageType.change:\n                    this.getServiceInstance(sessionID)?.setValue(sessionID, message.value);\n                    break;\n                case MessageType.applyDelta:\n                    this.getServiceInstance(sessionID)?.applyDeltas(sessionID, message.value);\n                    break;\n                case MessageType.hover:\n                    postMessage[\"value\"] = await this.getServiceInstance(sessionID)?.doHover(sessionID, message.value);\n                    break;\n                case MessageType.validate:\n                    postMessage[\"value\"] = await this.getServiceInstance(sessionID)?.doValidation(sessionID);\n                    break;\n                case MessageType.init: //this should be first message\n                    await this.addDocument(sessionID, message.value, message.mode, message.options);\n                    break;\n                case MessageType.changeMode:\n                    await this.changeDocumentMode(sessionID, message.value, message.mode, message.options);\n                    break;\n                case MessageType.changeOptions:\n                    this.getServiceInstance(sessionID)?.setOptions(sessionID, message.options);\n                    break;\n                case MessageType.dispose:\n                    this.removeDocument(sessionID);\n                    break;\n                case MessageType.globalOptions:\n                    this.setGlobalOptions(message.serviceName, message.options, message.merge);\n                    break;\n            }\n\n            ctx.postMessage(postMessage);\n        })\n    }\n\n    private static async $initServiceInstance(service: ServiceData) {\n        try {\n            service.serviceInstance = new (await service.module)[service.className](service.modes);\n        } catch (e) {\n            console.log(\"Couldn't resolve language service for \" + service.modes);//TODO\n        }\n        service.serviceInstance.setGlobalOptions(service.options);\n    }\n\n    private async $getServiceInstanceByMode(mode: string): Promise<LanguageService> {\n        let service = this.findServiceByMode(mode);\n        if (!service)\n            return;\n        if (!service.serviceInstance)\n            await ServiceManager.$initServiceInstance(service);\n        return service.serviceInstance;\n    }\n\n    setGlobalOptions(serviceName: string, options: ServiceOptions, merge = false) {\n        let service = this.$services[serviceName];\n        if (!service)\n            return;\n        service.options = options;\n        if (service.serviceInstance) {\n            if (merge) {\n                options = mergeObjects(options, service.serviceInstance.globalOptions);\n            }\n            service.serviceInstance.setGlobalOptions(options);\n        }\n    }\n\n    async addDocument(sessionID: string, documentValue: string, mode: string, options: ServiceOptions) {\n        if (!mode || !/^ace\\/mode\\//.test(mode))\n            return;\n\n        mode = mode.replace(\"ace/mode/\", \"\");\n\n        let document = new Document(documentValue);\n        let serviceInstance = await this.$getServiceInstanceByMode(mode);\n        if (!serviceInstance)\n            return;\n        serviceInstance.addDocument(sessionID, document, options);\n        this.$sessionIDToMode[sessionID] = mode;\n    }\n\n    async changeDocumentMode(sessionID: string, value: string, mode: string, options: ServiceOptions) {\n        this.removeDocument(sessionID);\n        await this.addDocument(sessionID, value, mode, options);\n    }\n\n    removeDocument(sessionID: string) {\n        let service = this.getServiceInstance(sessionID);\n        if (service) {\n            service.removeDocument(sessionID);\n            delete this.$sessionIDToMode[sessionID];\n        }\n    }\n\n    getServiceInstance(sessionID: string): LanguageService {\n        let mode = this.$sessionIDToMode[sessionID];\n        let service = this.findServiceByMode(mode);\n        if (!mode || !service?.serviceInstance)\n            return; //TODO:\n\n        return service.serviceInstance;\n    }\n\n    findServiceByMode(mode: string): ServiceData {\n        return Object.values(this.$services).find((el) => {\n            let extensions = el.modes.split('|');\n            if (extensions.includes(mode))\n                return el;\n        });\n    }\n\n    registerService(name: string, service: ServiceData) {\n        this.$services[name] = service;\n    }\n}\n","import {ServiceManager} from \"ace-linters/services/service-manager\";\n\nlet manager = new ServiceManager(self);\nmanager.registerService(\"html\", {\n    module: import(\"ace-linters/services/html/html-service\"),\n    className: \"HtmlService\",\n    modes: \"html\"\n});\nmanager.registerService(\"css\", {\n    module: import(\"ace-linters/services/css/css-service\"),\n    className: \"CssService\",\n    modes: \"css\"\n});\nmanager.registerService(\"less\", {\n    module: import(\"ace-linters/services/css/css-service\"),\n    className: \"CssService\",\n    modes: \"less\"\n});\nmanager.registerService(\"scss\", {\n    module: import(\"ace-linters/services/css/css-service\"),\n    className: \"CssService\",\n    modes: \"scss\"\n});\nmanager.registerService(\"json\", {\n    module: import(\"ace-linters/services/json/json-service\"),\n    className: \"JsonService\",\n    modes: \"json\",\n});\nmanager.registerService(\"json5\", {\n    module: import(\"ace-linters/services/json/json-service\"),\n    className: \"JsonService\",\n    modes: \"json5\",\n});\nmanager.registerService(\"typescript\", {\n    module: import(\"ace-linters/services/typescript/typescript-service\"),\n    className: \"TypescriptService\",\n    modes: \"typescript|javascript|tsx|jsx\",\n});\nmanager.registerService(\"lua\", {\n    module: import(\"ace-linters/services/lua/lua-service\"),\n    className: \"LuaService\",\n    modes: \"lua\",\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [218], () => (__webpack_require__(6178)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t178: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkace_linters_root\"] = self[\"webpackChunkace_linters_root\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(218).then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":[],"sourceRoot":""}