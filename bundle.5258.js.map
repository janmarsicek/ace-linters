{"version":3,"file":"bundle.5258.js","mappings":"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C;;;IACjC;oBAFqDA;;;;AAGrD8J,KAAKC,SAAS,CAACL,wCAAmC;eAAE,sCAAOc,QAA0C;;YACjG;;gBAAOjD,YAAYrH,MAAM,CAACsK,OAAOC,YAAY,EAAED,OAAOrK,KAAK,EAAEqK,OAAOrM,OAAO;;;IAC/E;oBAF2DqM;;;;AAI3DV,KAAKa,MAAM;SAEI1K,aAAa1B,QAAQ;WAArB0B;;SAAAA;IAAAA,gBAAf,sCAA4B1B,QAAQ,EAAE;YAC9BkE;;;;oBAAc;;wBAAM8E,YAAYtH,YAAY,CAAC1B;;;oBAA7CkE,cAAc;oBAClBmI,gBAAgBrM,UAAUkE;;;;;;IAC9B;WAHexC;;AAKf,SAAS2K,gBAAgBrM,QAAsB,EAAEkE,WAAyB,EAAQ;IAC9EqH,KAAKe,gBAAgB,CAAClB,wCAAmC,EAAE;QACvDnL,KAAKD,SAASC,GAAG;QAAEiE,aAAAA;IACvB;AACJ;;;;;;;UCrFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;WClCA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;UENA;UACA","sources":["webpack://ace-linters-root/./node_modules/ace-code/src/ sync","webpack://ace-linters-root/./packages/ace-linters/utils.ts","webpack://ace-linters-root/./packages/ace-linters/services/base-service.ts","webpack://ace-linters-root/./packages/ace-linters/type-converters/common-converters.ts","webpack://ace-linters-root/./packages/ace-linters/type-converters/lsp-converters.ts","webpack://ace-linters-root/./packages/ace-linters/services/json/json-service.ts","webpack://ace-linters-root/./packages/demo/webworker-json-rpc/webworker.ts","webpack://ace-linters-root/webpack/bootstrap","webpack://ace-linters-root/webpack/runtime/chunk loaded","webpack://ace-linters-root/webpack/runtime/define property getters","webpack://ace-linters-root/webpack/runtime/ensure chunk","webpack://ace-linters-root/webpack/runtime/get javascript chunk filename","webpack://ace-linters-root/webpack/runtime/global","webpack://ace-linters-root/webpack/runtime/hasOwnProperty shorthand","webpack://ace-linters-root/webpack/runtime/make namespace object","webpack://ace-linters-root/webpack/runtime/publicPath","webpack://ace-linters-root/webpack/runtime/importScripts chunk loading","webpack://ace-linters-root/webpack/runtime/startup chunk dependencies","webpack://ace-linters-root/webpack/before-startup","webpack://ace-linters-root/webpack/startup","webpack://ace-linters-root/webpack/after-startup"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 2126;\nmodule.exports = webpackEmptyContext;","export function mergeObjects(obj1, obj2) {\n    if (!obj1) return obj2;\n    if (!obj2) return obj1;\n\n    const mergedObjects = { ...obj2, ...obj1 }; // Give priority to obj1 values by spreading obj2 first, then obj1\n\n    for (const key of Object.keys(mergedObjects)) {\n        if (obj1[key] && obj2[key]) {\n            if (Array.isArray(obj1[key])) {\n                mergedObjects[key] = obj1[key].concat(obj2[key]);\n            } else if (Array.isArray(obj2[key])) {\n                mergedObjects[key] = obj2[key].concat(obj1[key]);\n            } else if (typeof obj1[key] === 'object' && typeof obj2[key] === 'object') {\n                mergedObjects[key] = mergeObjects(obj1[key], obj2[key]);\n            }\n        }\n    }\n\n    return mergedObjects;\n}\n\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n    return value !== null && value !== undefined;\n}\n\nexport function checkValueAgainstRegexpArray(value: string, regexpArray?: RegExp[]) {\n    if (!regexpArray) {\n        return false;\n    }\n    for (let i = 0; i < regexpArray.length; i++) {\n        if (regexpArray[i].test(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n","import * as lsp from \"vscode-languageserver-protocol\";\nimport {mergeObjects} from \"../utils\";\nimport {TextDocument} from \"vscode-languageserver-textdocument\";\nimport {FilterDiagnosticsOptions, LanguageService, ServiceData, ServiceOptions} from \"../types\";\n\nexport abstract class BaseService<OptionsType extends ServiceOptions = ServiceOptions> implements LanguageService {\n    abstract $service;\n    mode: string;\n    documents: { [sessionID: string]: TextDocument } = {};\n    options: { [sessionID: string]: OptionsType } = {};\n    globalOptions: OptionsType = {} as OptionsType;\n    serviceData: ServiceData;\n\n    protected constructor(mode: string) {\n        this.mode = mode;\n    }\n\n    addDocument(document: lsp.TextDocumentItem) {\n        this.documents[document.uri] = TextDocument.create(document.uri, document.languageId, document.version,\n            (document as lsp.TextDocumentItem).text)\n        //TODO:\n        /*if (options)\n            this.setSessionOptions(sessionID, options);*/\n    }\n\n    getDocument(uri: string): TextDocument {\n        return this.documents[uri];\n    }\n\n    removeDocument(document: lsp.TextDocumentIdentifier) {\n        delete this.documents[document.uri];\n        if (this.options[document.uri]) {\n            delete this.options[document.uri];\n        }\n    }\n\n    getDocumentValue(uri: string): string | undefined {\n        return this.getDocument(uri)?.getText();\n    }\n\n    setValue(identifier: lsp.VersionedTextDocumentIdentifier, value: string) {\n        let document = this.getDocument(identifier.uri);\n        if (document) {\n            document = TextDocument.create(document.uri, document.languageId, document.version, value);\n            this.documents[document.uri] = document;\n        }\n    }\n\n    setGlobalOptions(options: OptionsType) {\n        this.globalOptions = options ?? {} as OptionsType;\n    }\n\n    setOptions(sessionID: string, options: OptionsType, merge = false) {\n        this.options[sessionID] = merge ? mergeObjects(options, this.options[sessionID]) : options;\n    }\n\n    getOption<T extends keyof OptionsType>(sessionID: string, optionName: T): OptionsType[T] {\n        if (this.options[sessionID] && this.options[sessionID][optionName]) {\n            return this.options[sessionID][optionName];\n        } else {\n            return this.globalOptions[optionName];\n        }\n    }\n\n    applyDeltas(identifier: lsp.VersionedTextDocumentIdentifier, deltas: lsp.TextDocumentContentChangeEvent[]) {\n        let document = this.getDocument(identifier.uri);\n        if (document)\n            TextDocument.update(document, deltas, identifier.version);\n    }\n\n    async doComplete(document, position: lsp.Position): Promise<lsp.CompletionItem[] | lsp.CompletionList | null> {\n        return null;\n    }\n\n    async doHover(document, position: lsp.Position): Promise<lsp.Hover | null> {\n        return null;\n    }\n\n    async doResolve(item: lsp.CompletionItem): Promise<lsp.CompletionItem | null> {\n        return null;\n    }\n\n    async doValidation(document): Promise<lsp.Diagnostic[]> {\n        return [];\n    }\n\n    format(document, range: lsp.Range, options: lsp.FormattingOptions): lsp.TextEdit[] {\n        return [];\n    }\n\n    async provideSignatureHelp(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.SignatureHelp | null> {\n        return null;\n    }\n\n    async findDocumentHighlights(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.DocumentHighlight[]> {\n        return [];\n    }\n\n    get optionsToFilterDiagnostics(): FilterDiagnosticsOptions {\n        return {\n            errorCodesToIgnore: this.globalOptions.errorCodesToIgnore ?? [],\n            errorCodesToTreatAsWarning: this.globalOptions.errorCodesToTreatAsWarning ?? [],\n            errorCodesToTreatAsInfo: this.globalOptions.errorCodesToTreatAsInfo ?? [],\n            errorMessagesToIgnore: this.globalOptions.errorMessagesToIgnore ?? [],\n            errorMessagesToTreatAsWarning: this.globalOptions.errorMessagesToTreatAsWarning ?? [],\n            errorMessagesToTreatAsInfo: this.globalOptions.errorMessagesToTreatAsInfo ?? [],\n        }\n    }\n\n}\n","import {Ace, Range as AceRange} from \"ace-code\";\nimport {CompletionItemKind} from \"vscode-languageserver-protocol\";\nimport {checkValueAgainstRegexpArray} from \"../utils\";\n\nexport namespace CommonConverter {\n    export function normalizeRanges(completions: Ace.Completion[]): Ace.Completion[] {\n        return completions && completions.map((el) => {\n            if (el[\"range\"]) {\n                el[\"range\"] = toRange(el[\"range\"]);\n            }\n            return el;\n        })\n    }\n\n    export function cleanHtml(html: string) {//TODO: improve this\n        return html.replace(/<a\\s/, \"<a target='_blank' \");\n    }\n\n    export function toRange(range: { start, end }): Ace.Range | undefined {\n        if (!range || !range.start || !range.end) {\n            return;\n        }\n        return AceRange.fromPoints(range.start, range.end);\n    }\n\n    export declare type TooltipType = 'plaintext' | 'markdown';\n\n    export function convertKind(kind?: string): CompletionItemKind {\n        switch (kind) {\n            case \"primitiveType\":\n            case \"keyword\":\n                return CompletionItemKind.Keyword;\n            case \"variable\":\n            case \"localVariable\":\n                return CompletionItemKind.Variable;\n            case \"memberVariable\":\n            case \"memberGetAccessor\":\n            case \"memberSetAccessor\":\n                return CompletionItemKind.Field;\n            case \"function\":\n            case \"memberFunction\":\n            case \"constructSignature\":\n            case \"callSignature\":\n            case \"indexSignature\":\n                return CompletionItemKind.Function;\n            case \"enum\":\n                return CompletionItemKind.Enum;\n            case \"module\":\n                return CompletionItemKind.Module;\n            case \"class\":\n                return CompletionItemKind.Class;\n            case \"interface\":\n                return CompletionItemKind.Interface;\n            case \"warning\":\n                return CompletionItemKind.File;\n        }\n\n        return CompletionItemKind.Property;\n    }\n\n    export function excludeByErrorMessage<T>(diagnostics: T[], errorMessagesToIgnore?: RegExp[], fieldName = \"message\"): T[] {\n        if (!errorMessagesToIgnore)\n            return diagnostics;\n        return diagnostics.filter((el) => !checkValueAgainstRegexpArray(el[fieldName], errorMessagesToIgnore));\n    }\n}\n","import {\n    Range,\n    Position,\n    Diagnostic,\n    InsertTextFormat,\n    CompletionItem,\n    CompletionItemKind,\n    Hover,\n    MarkupContent,\n    MarkedString,\n    TextEdit,\n    InsertReplaceEdit,\n    TextDocumentContentChangeEvent,\n    SignatureHelp,\n    DiagnosticSeverity\n} from \"vscode-languageserver-protocol\";\nimport type {Ace} from \"ace-code\";\nimport {Range as AceRange} from \"ace-code/src/range\";\nimport {RangeList} from \"ace-code/src/range_list\";\nimport {CommonConverter} from \"./common-converters\";\nimport {CompletionService, FilterDiagnosticsOptions, Tooltip} from \"../types\";\nimport {checkValueAgainstRegexpArray} from \"../utils\";\n\n\nexport function fromRange(range: Ace.Range): Range {\n    return {\n        start: {\n            line: range.start.row,\n            character: range.start.column\n        },\n        end: {line: range.end.row, character: range.end.column}\n    };\n}\n\nexport function rangeFromPositions(start: Position, end: Position): Range {\n    return {\n        start: start,\n        end: end\n    }\n}\n\nexport function toRange(range: Range): Ace.Range {\n    return new AceRange(range.start.line, range.start.character, range.end.line, range.end.character);\n}\n\nexport function fromPoint(point: Ace.Point): Position {\n    return {line: point.row, character: point.column}\n}\n\nexport function toPoint(position: Position): Ace.Point {\n    return {row: position.line, column: position.character}\n}\n\nexport function toAnnotations(diagnostics: Diagnostic[]): Ace.Annotation[] {\n    return diagnostics.map((el) => {\n        return {\n            row: el.range.start.line,\n            column: el.range.start.character,\n            text: el.message,\n            type: el.severity === 1 ? \"error\" : el.severity === 2 ? \"warning\" : \"info\"\n        };\n    });\n}\n\nexport function toCompletion(item: CompletionItem): Ace.Completion {\n    let itemKind = item.kind;\n    let kind = itemKind ? Object.keys(CompletionItemKind)[Object.values(CompletionItemKind).indexOf(itemKind)] : undefined;\n    let text = item.textEdit?.newText ?? item.insertText ?? item.label;\n    let command = (item.command?.command == \"editor.action.triggerSuggest\") ? \"startAutocomplete\" : undefined;\n    let range = item.textEdit ? getTextEditRange(item.textEdit) : undefined;\n    let completion = {\n        meta: kind,\n        caption: item.label,\n        command: command,\n        range: range,\n        value: \"\",\n        score: undefined,\n        item: item\n    };\n\n    if (item.insertTextFormat == InsertTextFormat.Snippet) {\n        completion[\"snippet\"] = text;\n    } else {\n        completion[\"value\"] = text;\n    }\n    completion[\"documentation\"] = item.documentation; //TODO: this is workaround for services with instant completion\n    completion[\"position\"] = item[\"position\"];\n    completion[\"service\"] = item[\"service\"]; //TODO: since we have multiple servers, we need to determine which\n    // server to use for resolving\n    return completion;\n}\n\n\nexport function toCompletions(completions: CompletionService[]): Ace.Completion[] {\n    if (completions.length > 0) {\n        let combinedCompletions = completions.map((el) => {\n            if (!el.completions) {\n                return [];\n            }\n            let allCompletions;\n            if (Array.isArray(el.completions)) {\n                allCompletions = el.completions;\n            } else {\n                allCompletions = el.completions.items;\n            }\n            return allCompletions.map((item) => {\n                item[\"service\"] = el.service;\n                return item;\n            });\n        }).flat();\n\n        return combinedCompletions.map((item) => toCompletion(item))\n    }\n    return [];\n}\n\nexport function toResolvedCompletion(completion: Ace.Completion, item: CompletionItem): Ace.Completion {\n    completion[\"docMarkdown\"] = fromMarkupContent(item.documentation);\n    return completion;\n}\n\nexport function toCompletionItem(completion: Ace.Completion): CompletionItem {\n    let command;\n    if (completion[\"command\"]) {\n        command = {\n            title: \"triggerSuggest\",\n            command: completion[\"command\"]\n        }\n    }\n    let completionItem: CompletionItem = {\n        label: completion.caption ?? \"\",\n        kind: CommonConverter.convertKind(completion.meta),\n        command: command,\n        insertTextFormat: (completion[\"snippet\"]) ? InsertTextFormat.Snippet : InsertTextFormat.PlainText,\n        documentation: completion[\"documentation\"],\n    };\n    if (completion[\"range\"]) {\n        completionItem.textEdit = {\n            range: fromRange(completion[\"range\"]),\n            newText: (completion[\"snippet\"] ?? completion[\"value\"])!\n        }\n    } else {\n        completionItem.insertText = (completion[\"snippet\"] ?? completion[\"value\"])!\n    }\n    completionItem[\"fileName\"] = completion[\"fileName\"];\n    completionItem[\"position\"] = completion[\"position\"];\n    completionItem[\"item\"] = completion[\"item\"];\n    completionItem[\"service\"] = completion[\"service\"]; //TODO:\n\n    return completionItem;\n}\n\nexport function getTextEditRange(textEdit: TextEdit | InsertReplaceEdit): Ace.Range {\n    if (textEdit.hasOwnProperty(\"insert\") && textEdit.hasOwnProperty(\"replace\")) {\n        textEdit = textEdit as InsertReplaceEdit;\n        let rangeList = new RangeList();\n        rangeList.ranges = [toRange(textEdit.insert), toRange(textEdit.replace)];\n        rangeList.merge();\n        return rangeList[0];\n    } else {\n        textEdit = textEdit as TextEdit;\n        return toRange(textEdit.range);\n    }\n}\n\nexport function toTooltip(hover: Hover[] | undefined): Tooltip | undefined {\n    if (!hover)\n        return;\n    let content = hover.map((el) => {\n        if (MarkupContent.is(el.contents)) {\n            return fromMarkupContent(el.contents);\n        } else if (MarkedString.is(el.contents)) {\n            return \"```\" + (el.contents as any).value + \"```\";\n        } else {\n            let contents = el.contents.map((el) => {\n                if (typeof el !== \"string\") {\n                    return `\\`\\`\\`${el.value}\\`\\`\\``;\n                } else {\n                    return el;\n                }\n            });\n            return contents.join(\"\\n\\n\");\n        }\n    });\n\n    //TODO: not to forget about `range` when we will have this feature in editor\n    return {\n        content: {\n            type: \"markdown\",\n            text: content.join(\"\\n\\n\")\n        }\n    };\n}\n\nexport function fromSignatureHelp(signatureHelp: SignatureHelp[] | undefined): Tooltip | undefined {\n    if (!signatureHelp)\n        return;\n    let content = signatureHelp.map((el) => {\n        let signatureIndex = el?.activeSignature || 0;\n        let activeSignature = el.signatures[signatureIndex];\n        let activeParam = el?.activeParameter;\n        let contents = activeSignature.label;\n        if (activeParam != undefined && activeSignature.parameters && activeSignature.parameters[activeParam]) {\n            let param = activeSignature.parameters[activeParam].label;\n            if (typeof param == \"string\") {\n                contents = contents.replace(param, `**${param}**`);\n            }\n        }\n        if (activeSignature.documentation) {\n            if (MarkupContent.is(activeSignature.documentation)) {\n                return contents + \"\\n\\n\" + fromMarkupContent(activeSignature.documentation)\n            } else {\n                contents += \"\\n\\n\" + activeSignature.documentation;\n                return contents;\n            }\n        } else {\n            return contents;\n        }\n    });\n\n\n    return {\n        content: {\n            type: \"markdown\",\n            text: content.join(\"\\n\\n\")\n        }\n    };\n}\n\nexport function fromMarkupContent(content?: string | MarkupContent): string | undefined {\n    if (!content)\n        return;\n\n    if (typeof content === \"string\") {\n        return content;\n    } else {\n        return content.value;\n    }\n}\n\nexport function fromAceDelta(delta: Ace.Delta, eol: string): TextDocumentContentChangeEvent {\n    const text = delta.lines.length > 1 ? delta.lines.join(eol) : delta.lines[0];\n    return {\n        range:\n            delta.action === \"insert\"\n                ? rangeFromPositions(fromPoint(delta.start), fromPoint(delta.start))\n                : rangeFromPositions(fromPoint(delta.start), fromPoint(delta.end)),\n        text: delta.action === \"insert\" ? text : \"\",\n    };\n}\n\nexport function filterDiagnostics(diagnostics: Diagnostic[], filterErrors: FilterDiagnosticsOptions): Diagnostic[] {\n    return CommonConverter.excludeByErrorMessage(diagnostics, filterErrors.errorMessagesToIgnore).map((el) => {\n        if (checkValueAgainstRegexpArray(el.message, filterErrors.errorMessagesToTreatAsWarning)) {\n            el.severity = DiagnosticSeverity.Warning;\n        } else if (checkValueAgainstRegexpArray(el.message, filterErrors.errorMessagesToTreatAsInfo)) {\n            el.severity = DiagnosticSeverity.Information;\n        }\n        return el;\n    })\n}\n","import {\n    LanguageService as VSLanguageService,\n    SchemaConfiguration\n} from \"vscode-json-languageservice\";\nimport {BaseService} from \"../base-service\";\nimport * as lsp from \"vscode-languageserver-protocol\";\n\nimport * as jsonService from 'vscode-json-languageservice';\nimport {TextDocumentIdentifier, TextDocumentItem} from \"vscode-languageserver-protocol\";\nimport {JsonServiceOptions, LanguageService} from \"../../types\";\nimport {filterDiagnostics} from \"../../type-converters/lsp-converters\";\n\nexport class JsonService extends BaseService<JsonServiceOptions> implements LanguageService {\n    $service: VSLanguageService;\n    schemas: { [schemaUri: string]: string } = {};\n\n    constructor(mode: string) {\n        super(mode);\n        this.$service = jsonService.getLanguageService({\n            schemaRequestService: (uri) => {\n                uri = uri.replace(\"file:///\", \"\");\n                let jsonSchema = this.schemas[uri];\n                if (jsonSchema)\n                    return Promise.resolve(jsonSchema);\n                return Promise.reject(`Unable to load schema at ${uri}`);\n            }\n        });\n    }\n\n    private $getJsonSchemaUri(sessionID): string | undefined {\n        return this.getOption(sessionID, \"schemaUri\");\n    }\n\n    addDocument(document: TextDocumentItem) {\n        super.addDocument(document);\n        this.$configureService(document.uri);\n    }\n\n    private $configureService(sessionID?: string) {\n        let schemas = this.getOption(sessionID ?? \"\", \"schemas\");\n        let sessionIDs = sessionID ? [] : Object.keys(this.documents);\n        schemas?.forEach((el) => {\n            if (sessionID) {\n                if (this.$getJsonSchemaUri(sessionID) == el.uri) {\n                    el.fileMatch ??= [];\n                    el.fileMatch.push(sessionID);\n                }\n            } else {\n                el.fileMatch = sessionIDs.filter(sessionID => this.$getJsonSchemaUri(sessionID) == el.uri);\n            }\n            let schema = el.schema ?? this.schemas[el.uri];\n            if (schema)\n                this.schemas[el.uri] = schema;\n            this.$service.resetSchema(el.uri);\n            el.schema = undefined;\n        });\n\n        this.$service.configure({\n            schemas: schemas as SchemaConfiguration[],\n            allowComments: this.mode === \"json5\"\n        });\n\n    }\n\n    removeDocument(document: TextDocumentIdentifier) {\n        super.removeDocument(document);\n        let schemas = this.getOption(document.uri, \"schemas\");\n        schemas?.forEach((el) => {\n            if (el.uri === this.$getJsonSchemaUri(document.uri)) {\n                el.fileMatch = el.fileMatch?.filter((pattern) => pattern != document.uri);\n            }\n        });\n        this.$service.configure({\n            schemas: schemas as SchemaConfiguration[],\n            allowComments: this.mode === \"json5\"\n        });\n    }\n\n    setOptions(sessionID: string, options: JsonServiceOptions, merge = false) {\n        super.setOptions(sessionID, options, merge);\n        this.$configureService(sessionID);\n    }\n\n    setGlobalOptions(options: JsonServiceOptions) {\n        super.setGlobalOptions(options);\n        this.$configureService();\n    }\n\n    format(document: lsp.TextDocumentIdentifier, range: lsp.Range, options: lsp.FormattingOptions): lsp.TextEdit[] {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return [];\n\n        return this.$service.format(fullDocument, range, options);\n    }\n\n    async doHover(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.Hover | null> {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return null;\n\n        let jsonDocument = this.$service.parseJSONDocument(fullDocument);\n        return this.$service.doHover(fullDocument, position, jsonDocument);\n    }\n\n    async doValidation(document: lsp.TextDocumentIdentifier): Promise<lsp.Diagnostic[]> {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return [];\n\n        let jsonDocument = this.$service.parseJSONDocument(fullDocument);\n        let diagnostics = await this.$service.doValidation(fullDocument, jsonDocument, {trailingCommas: this.mode === \"json5\" ? \"ignore\" : \"error\"});\n        return filterDiagnostics(diagnostics, this.optionsToFilterDiagnostics);\n    }\n\n    async doComplete(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.CompletionItem[] | lsp.CompletionList | null> {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return null;\n\n        let jsonDocument = this.$service.parseJSONDocument(fullDocument);\n        return this.$service.doComplete(fullDocument, position, jsonDocument);\n    }\n\n    async doResolve(item: lsp.CompletionItem): Promise<lsp.CompletionItem> {\n        return this.$service.doResolve(item);\n    }\n}\n","import {\n    createProtocolConnection,\n    BrowserMessageReader,\n    BrowserMessageWriter,\n} from \"vscode-languageserver-protocol/browser\";\nimport {\n    CompletionRequest,\n    CompletionResolveRequest,\n    DidChangeTextDocumentNotification,\n    DidOpenTextDocumentNotification,\n    HoverRequest,\n    HoverParams,\n    InitializeRequest,\n    InitializeResult,\n    TextDocumentSyncKind,\n    CompletionItem,\n    DidOpenTextDocumentParams,\n    DidChangeTextDocumentParams,\n    CompletionParams,\n    DocumentRangeFormattingRequest,\n    DocumentRangeFormattingParams,\n    PublishDiagnosticsNotification,\n    Diagnostic,\n    TextDocument\n} from \"vscode-languageserver-protocol\";\nimport {JsonService} from \"ace-linters/services/json/json-service\";\n\nconst worker: Worker = self as any;\nconst conn = createProtocolConnection(\n    new BrowserMessageReader(worker),\n    new BrowserMessageWriter(worker)\n);\n\nlet jsonService = new JsonService(\"json\");\nconn.onRequest(InitializeRequest.type, (_params): InitializeResult => {\n    return {\n        capabilities: {\n            textDocumentSync: TextDocumentSyncKind.Incremental,\n            completionProvider: {\n                resolveProvider: true,\n            },\n            hoverProvider: true,\n        },\n    };\n});\nconn.onNotification(\n    DidOpenTextDocumentNotification.type,\n    (params: DidOpenTextDocumentParams) => {\n        jsonService.addDocument(params.textDocument);\n        doValidation(params.textDocument);\n    }\n);\nconn.onNotification(\n    DidChangeTextDocumentNotification.type,\n    (params: DidChangeTextDocumentParams) => {\n        jsonService.applyDeltas(params.textDocument, params.contentChanges);\n        doValidation(params.textDocument);\n    }\n);\nconn.onRequest(CompletionRequest.type, async (params: CompletionParams) => {\n    return jsonService.doComplete(\n        params.textDocument, params.position\n    );\n});\nconn.onRequest(HoverRequest.type, async (params: HoverParams) => {\n    return jsonService.doHover(params.textDocument, params.position);\n});\nconn.onRequest(CompletionResolveRequest.type, async (item: CompletionItem) => {\n    return jsonService.doResolve(item);\n});\nconn.onRequest(DocumentRangeFormattingRequest.type, async (params: DocumentRangeFormattingParams) => {\n    return jsonService.format(params.textDocument, params.range, params.options);\n});\n\nconn.listen();\n\nasync function doValidation(document) {\n    let diagnostics = await jsonService.doValidation(document);\n    sendDiagnostics(document, diagnostics);\n}\n\nfunction sendDiagnostics(document: TextDocument, diagnostics: Diagnostic[]): void {\n    conn.sendNotification(PublishDiagnosticsNotification.type, {\n        uri: document.uri, diagnostics\n    })\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [5224,8376], () => (__webpack_require__(51581)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t5258: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkace_linters_root\"] = self[\"webpackChunkace_linters_root\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(5224),\n\t\t__webpack_require__.e(8376)\n\t]).then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":["mergeObjects","obj1","obj2","mergedObjects","Object","keys","key","Array","isArray","concat","notEmpty","value","undefined","checkValueAgainstRegexpArray","regexpArray","i","length","test","TextDocument","BaseService","mode","documents","options","globalOptions","serviceData","addDocument","document","uri","create","languageId","version","text","getDocument","removeDocument","getDocumentValue","getText","setValue","identifier","setGlobalOptions","setOptions","sessionID","merge","getOption","optionName","applyDeltas","deltas","update","doComplete","position","doHover","doResolve","item","doValidation","format","range","provideSignatureHelp","findDocumentHighlights","optionsToFilterDiagnostics","errorCodesToIgnore","errorCodesToTreatAsWarning","errorCodesToTreatAsInfo","errorMessagesToIgnore","errorMessagesToTreatAsWarning","errorMessagesToTreatAsInfo","Range","AceRange","CompletionItemKind","CommonConverter","normalizeRanges","completions","map","el","toRange","cleanHtml","html","replace","start","end","fromPoints","convertKind","kind","Keyword","Variable","Field","Function","Enum","Module","Class","Interface","File","Property","excludeByErrorMessage","diagnostics","fieldName","filter","InsertTextFormat","MarkupContent","MarkedString","DiagnosticSeverity","RangeList","fromRange","line","row","character","column","rangeFromPositions","fromPoint","point","toPoint","toAnnotations","message","type","severity","toCompletion","itemKind","values","indexOf","textEdit","newText","insertText","label","command","getTextEditRange","completion","meta","caption","score","insertTextFormat","Snippet","documentation","toCompletions","combinedCompletions","allCompletions","items","service","flat","toResolvedCompletion","fromMarkupContent","toCompletionItem","title","completionItem","PlainText","hasOwnProperty","rangeList","ranges","insert","toTooltip","hover","content","is","contents","join","fromSignatureHelp","signatureHelp","signatureIndex","activeSignature","signatures","activeParam","activeParameter","parameters","param","fromAceDelta","delta","eol","lines","action","filterDiagnostics","filterErrors","Warning","Information","jsonService","JsonService","$service","schemas","getLanguageService","schemaRequestService","jsonSchema","Promise","resolve","reject","$getJsonSchemaUri","$configureService","sessionIDs","forEach","fileMatch","push","schema","resetSchema","configure","allowComments","pattern","fullDocument","jsonDocument","parseJSONDocument","trailingCommas","createProtocolConnection","BrowserMessageReader","BrowserMessageWriter","CompletionRequest","CompletionResolveRequest","DidChangeTextDocumentNotification","DidOpenTextDocumentNotification","HoverRequest","InitializeRequest","TextDocumentSyncKind","DocumentRangeFormattingRequest","PublishDiagnosticsNotification","worker","self","conn","onRequest","_params","capabilities","textDocumentSync","Incremental","completionProvider","resolveProvider","hoverProvider","onNotification","params","textDocument","contentChanges","listen","sendDiagnostics","sendNotification"],"sourceRoot":""}