{"version":3,"file":"bundle.2857.js","mappings":"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,OAAOpN,KAAK,EAAEoN,OAAO1L,OAAO;AAC/E;AAEAgL,KAAKa,MAAM;AAEX,eAAezK,aAAa7B,QAAQ,EAAE;IAClC,IAAIsE,cAAc,MAAM4E,YAAYrH,YAAY,CAAC7B;IACjDuM,gBAAgBvM,UAAUsE;AAC9B;AAEA,SAASiI,gBAAgBvM,QAAsB,EAAEsE,WAAyB,EAAQ;IAC9EmH,KAAKe,gBAAgB,CAAClB,wCAAmC,EAAE;QACvDpL,KAAKF,SAASE,GAAG;QAAEoE;IACvB;AACJ;;;;;;;UCrFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;WClCA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;UENA;UACA","sources":["webpack://ace-linters-root/./packages/ace-linters/utils.ts","webpack://ace-linters-root/./packages/ace-linters/services/base-service.ts","webpack://ace-linters-root/./packages/ace-linters/type-converters/common-converters.ts","webpack://ace-linters-root/./packages/ace-linters/type-converters/lsp-converters.ts","webpack://ace-linters-root/./packages/ace-linters/services/json/json-service.ts","webpack://ace-linters-root/./packages/demo/webworker-json-rpc/webworker.ts","webpack://ace-linters-root/webpack/bootstrap","webpack://ace-linters-root/webpack/runtime/chunk loaded","webpack://ace-linters-root/webpack/runtime/define property getters","webpack://ace-linters-root/webpack/runtime/ensure chunk","webpack://ace-linters-root/webpack/runtime/get javascript chunk filename","webpack://ace-linters-root/webpack/runtime/global","webpack://ace-linters-root/webpack/runtime/hasOwnProperty shorthand","webpack://ace-linters-root/webpack/runtime/make namespace object","webpack://ace-linters-root/webpack/runtime/publicPath","webpack://ace-linters-root/webpack/runtime/importScripts chunk loading","webpack://ace-linters-root/webpack/runtime/startup chunk dependencies","webpack://ace-linters-root/webpack/before-startup","webpack://ace-linters-root/webpack/startup","webpack://ace-linters-root/webpack/after-startup"],"sourcesContent":["\nexport function mergeObjects(obj1, obj2) {\n    if (!obj1) return obj2;\n    if (!obj2) return obj1;\n\n    const mergedObjects = { ...obj2, ...obj1 }; // Give priority to obj1 values by spreading obj2 first, then obj1\n\n    for (const key of Object.keys(mergedObjects)) {\n        if (obj1[key] && obj2[key]) {\n            if (Array.isArray(obj1[key])) {\n                mergedObjects[key] = obj1[key].concat(obj2[key]);\n            } else if (Array.isArray(obj2[key])) {\n                mergedObjects[key] = obj2[key].concat(obj1[key]);\n            } else if (typeof obj1[key] === 'object' && typeof obj2[key] === 'object') {\n                mergedObjects[key] = mergeObjects(obj1[key], obj2[key]);\n            }\n        }\n    }\n\n    return mergedObjects;\n}\n\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n    return value !== null && value !== undefined;\n}\n\n//taken with small changes from ace-code\nexport function mergeRanges(ranges) {\n    var list = ranges;\n\n    list = list.sort(function (a, b) {\n        return comparePoints(a.start, b.start);\n    });\n\n    var next = list[0], range;\n    for (var i = 1; i < list.length; i++) {\n        range = next;\n        next = list[i];\n        var cmp = comparePoints(range.end, next.start);\n        if (cmp < 0) continue;\n\n        if (cmp == 0 && !range.isEmpty() && !next.isEmpty()) continue;\n\n        if (comparePoints(range.end, next.end) < 0) {\n            range.end.row = next.end.row;\n            range.end.column = next.end.column;\n        }\n\n        list.splice(i, 1);\n        next = range;\n        i--;\n    }\n\n    return list;\n}\n\nfunction comparePoints(p1, p2) {\n    return p1.row - p2.row || p1.column - p2.column;\n}\n\nexport function checkValueAgainstRegexpArray(value: string, regexpArray?: RegExp[]) {\n    if (!regexpArray) {\n        return false;\n    }\n    for (let i = 0; i < regexpArray.length; i++) {\n        if (regexpArray[i].test(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n","import * as lsp from \"vscode-languageserver-protocol\";\nimport {mergeObjects} from \"../utils\";\nimport {TextDocument} from \"vscode-languageserver-textdocument\";\nimport {FilterDiagnosticsOptions, LanguageService, ServiceData, ServiceOptions} from \"../types\";\n\nexport abstract class BaseService<OptionsType extends ServiceOptions = ServiceOptions> implements LanguageService {\n    abstract $service;\n    mode: string;\n    documents: { [sessionID: string]: TextDocument } = {};\n    options: { [sessionID: string]: OptionsType } = {};\n    globalOptions: OptionsType = {} as OptionsType;\n    serviceData: ServiceData;\n\n    protected constructor(mode: string) {\n        this.mode = mode;\n    }\n\n    addDocument(document: lsp.TextDocumentItem) {\n        this.documents[document.uri] = TextDocument.create(document.uri, document.languageId, document.version,\n            (document as lsp.TextDocumentItem).text)\n        //TODO:\n        /*if (options)\n            this.setSessionOptions(sessionID, options);*/\n    }\n\n    getDocument(uri: string): TextDocument {\n        return this.documents[uri];\n    }\n\n    removeDocument(document: lsp.TextDocumentIdentifier) {\n        delete this.documents[document.uri];\n        if (this.options[document.uri]) {\n            delete this.options[document.uri];\n        }\n    }\n\n    getDocumentValue(uri: string): string | undefined {\n        return this.getDocument(uri)?.getText();\n    }\n\n    setValue(identifier: lsp.VersionedTextDocumentIdentifier, value: string) {\n        let document = this.getDocument(identifier.uri);\n        if (document) {\n            document = TextDocument.create(document.uri, document.languageId, document.version, value);\n            this.documents[document.uri] = document;\n        }\n    }\n\n    setGlobalOptions(options: OptionsType) {\n        this.globalOptions = options ?? {} as OptionsType;\n    }\n\n    setOptions(sessionID: string, options: OptionsType, merge = false) {\n        this.options[sessionID] = merge ? mergeObjects(options, this.options[sessionID]) : options;\n    }\n\n    getOption<T extends keyof OptionsType>(sessionID: string, optionName: T): OptionsType[T] {\n        if (this.options[sessionID] && this.options[sessionID][optionName]) {\n            return this.options[sessionID][optionName];\n        } else {\n            return this.globalOptions[optionName];\n        }\n    }\n\n    applyDeltas(identifier: lsp.VersionedTextDocumentIdentifier, deltas: lsp.TextDocumentContentChangeEvent[]) {\n        let document = this.getDocument(identifier.uri);\n        if (document)\n            TextDocument.update(document, deltas, identifier.version);\n    }\n\n    async doComplete(document, position: lsp.Position): Promise<lsp.CompletionItem[] | lsp.CompletionList | null> {\n        return null;\n    }\n\n    async doHover(document, position: lsp.Position): Promise<lsp.Hover | null> {\n        return null;\n    }\n\n    async doResolve(item: lsp.CompletionItem): Promise<lsp.CompletionItem | null> {\n        return null;\n    }\n\n    async doValidation(document): Promise<lsp.Diagnostic[]> {\n        return [];\n    }\n\n    format(document, range: lsp.Range, options: lsp.FormattingOptions): lsp.TextEdit[] {\n        return [];\n    }\n\n    async provideSignatureHelp(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.SignatureHelp | null> {\n        return null;\n    }\n\n    async findDocumentHighlights(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.DocumentHighlight[]> {\n        return [];\n    }\n\n    get optionsToFilterDiagnostics(): FilterDiagnosticsOptions {\n        return {\n            errorCodesToIgnore: this.globalOptions.errorCodesToIgnore ?? [],\n            errorCodesToTreatAsWarning: this.globalOptions.errorCodesToTreatAsWarning ?? [],\n            errorCodesToTreatAsInfo: this.globalOptions.errorCodesToTreatAsInfo ?? [],\n            errorMessagesToIgnore: this.globalOptions.errorMessagesToIgnore ?? [],\n            errorMessagesToTreatAsWarning: this.globalOptions.errorMessagesToTreatAsWarning ?? [],\n            errorMessagesToTreatAsInfo: this.globalOptions.errorMessagesToTreatAsInfo ?? [],\n        }\n    }\n\n}\n","import {Ace} from \"ace-code\";\nimport {CompletionItemKind} from \"vscode-languageserver-protocol\";\nimport {checkValueAgainstRegexpArray} from \"../utils\";\n\nexport namespace CommonConverter {\n    export function normalizeRanges(completions: Ace.Completion[], editor: Ace.Editor): Ace.Completion[] {\n        const Range = editor.getSelectionRange().constructor;\n        return completions && completions.map((el) => {\n            if (el[\"range\"]) {\n                el[\"range\"] = toRange(el[\"range\"], Range);\n            }\n            return el;\n        })\n    }\n\n    export function cleanHtml(html: string) {//TODO: improve this\n        return html.replace(/<a\\s/, \"<a target='_blank' \");\n    }\n\n    export function toRange(range: { start, end }, Range) {\n        if (!range || !range.start || !range.end) {\n            return;\n        }\n        return Range.fromPoints(range.start, range.end);\n    }\n\n    export declare type TooltipType = 'plaintext' | 'markdown';\n\n    export function convertKind(kind?: string): CompletionItemKind {\n        switch (kind) {\n            case \"primitiveType\":\n            case \"keyword\":\n                return CompletionItemKind.Keyword;\n            case \"variable\":\n            case \"localVariable\":\n                return CompletionItemKind.Variable;\n            case \"memberVariable\":\n            case \"memberGetAccessor\":\n            case \"memberSetAccessor\":\n                return CompletionItemKind.Field;\n            case \"function\":\n            case \"memberFunction\":\n            case \"constructSignature\":\n            case \"callSignature\":\n            case \"indexSignature\":\n                return CompletionItemKind.Function;\n            case \"enum\":\n                return CompletionItemKind.Enum;\n            case \"module\":\n                return CompletionItemKind.Module;\n            case \"class\":\n                return CompletionItemKind.Class;\n            case \"interface\":\n                return CompletionItemKind.Interface;\n            case \"warning\":\n                return CompletionItemKind.File;\n        }\n\n        return CompletionItemKind.Property;\n    }\n\n    export function excludeByErrorMessage<T>(diagnostics: T[], errorMessagesToIgnore?: RegExp[], fieldName = \"message\"): T[] {\n        if (!errorMessagesToIgnore)\n            return diagnostics;\n        return diagnostics.filter((el) => !checkValueAgainstRegexpArray(el[fieldName], errorMessagesToIgnore));\n    }\n}\n","import {\n    Range,\n    Position,\n    Diagnostic,\n    InsertTextFormat,\n    CompletionItem,\n    CompletionItemKind,\n    Hover,\n    MarkupContent,\n    MarkedString,\n    TextEdit,\n    InsertReplaceEdit,\n    TextDocumentContentChangeEvent,\n    SignatureHelp,\n    DiagnosticSeverity\n} from \"vscode-languageserver-protocol\";\nimport type {Ace} from \"ace-code\";\nimport {CommonConverter} from \"./common-converters\";\nimport {AceRangeData, CompletionService, FilterDiagnosticsOptions, Tooltip} from \"../types\";\nimport {checkValueAgainstRegexpArray, notEmpty} from \"../utils\";\n\nimport {mergeRanges} from \"../utils\";\n\nexport function fromRange(range: AceRangeData): Range {\n    return {\n        start: {\n            line: range.start.row,\n            character: range.start.column\n        },\n        end: {line: range.end.row, character: range.end.column}\n    };\n}\n\nexport function rangeFromPositions(start: Position, end: Position): Range {\n    return {\n        start: start,\n        end: end\n    }\n}\n\nexport function toRange(range: Range): AceRangeData {\n    return {\n        start: {\n            row: range.start.line,\n            column: range.start.character\n        },\n        end: {\n            row: range.end.line,\n            column: range.end.character\n        }\n    }\n}\n\nexport function fromPoint(point: Ace.Point): Position {\n    return {line: point.row, character: point.column}\n}\n\nexport function toPoint(position: Position): Ace.Point {\n    return {row: position.line, column: position.character}\n}\n\nexport function toAnnotations(diagnostics: Diagnostic[]): Ace.Annotation[] {\n    return diagnostics.map((el) => {\n        return {\n            row: el.range.start.line,\n            column: el.range.start.character,\n            text: el.message,\n            type: el.severity === 1 ? \"error\" : el.severity === 2 ? \"warning\" : \"info\"\n        };\n    });\n}\n\nexport function toCompletion(item: CompletionItem) {\n    let itemKind = item.kind;\n    let kind = itemKind ? Object.keys(CompletionItemKind)[Object.values(CompletionItemKind).indexOf(itemKind)] : undefined;\n    let text = item.textEdit?.newText ?? item.insertText ?? item.label;\n    let command = (item.command?.command == \"editor.action.triggerSuggest\") ? \"startAutocomplete\" : undefined;\n    let range = item.textEdit ? getTextEditRange(item.textEdit) : undefined;\n    let completion = {\n        meta: kind,\n        caption: item.label,\n        score: undefined\n    };\n\n    completion[\"command\"] = command;\n    completion[\"range\"] = range;\n    completion[\"item\"] = item;\n\n    if (item.insertTextFormat == InsertTextFormat.Snippet) {\n        completion[\"snippet\"] = text;\n    } else {\n        completion[\"value\"] = text ?? \"\";\n    }\n    completion[\"documentation\"] = item.documentation; //TODO: this is workaround for services with instant completion\n    completion[\"position\"] = item[\"position\"];\n    completion[\"service\"] = item[\"service\"]; //TODO: since we have multiple servers, we need to determine which\n    // server to use for resolving\n    return completion;\n}\n\n\nexport function toCompletions(completions: CompletionService[]): Ace.Completion[] {\n    if (completions.length > 0) {\n        let combinedCompletions = completions.map((el) => {\n            if (!el.completions) {\n                return [];\n            }\n            let allCompletions;\n            if (Array.isArray(el.completions)) {\n                allCompletions = el.completions;\n            } else {\n                allCompletions = el.completions.items;\n            }\n            return allCompletions.map((item) => {\n                item[\"service\"] = el.service;\n                return item;\n            });\n        }).flat();\n\n        return combinedCompletions.map((item) => toCompletion(item) as Ace.Completion)\n    }\n    return [];\n}\n\nexport function toResolvedCompletion(completion: Ace.Completion, item: CompletionItem): Ace.Completion {\n    completion[\"docMarkdown\"] = fromMarkupContent(item.documentation);\n    return completion;\n}\n\nexport function toCompletionItem(completion: Ace.Completion): CompletionItem {\n    let command;\n    if (completion[\"command\"]) {\n        command = {\n            title: \"triggerSuggest\",\n            command: completion[\"command\"]\n        }\n    }\n    let completionItem: CompletionItem = {\n        label: completion.caption ?? \"\",\n        kind: CommonConverter.convertKind(completion.meta),\n        command: command,\n        insertTextFormat: (completion[\"snippet\"]) ? InsertTextFormat.Snippet : InsertTextFormat.PlainText,\n        documentation: completion[\"documentation\"],\n    };\n    if (completion[\"range\"]) {\n        completionItem.textEdit = {\n            range: fromRange(completion[\"range\"]),\n            newText: (completion[\"snippet\"] ?? completion[\"value\"])!\n        }\n    } else {\n        completionItem.insertText = (completion[\"snippet\"] ?? completion[\"value\"])!\n    }\n    completionItem[\"fileName\"] = completion[\"fileName\"];\n    completionItem[\"position\"] = completion[\"position\"];\n    completionItem[\"item\"] = completion[\"item\"];\n    completionItem[\"service\"] = completion[\"service\"]; //TODO:\n\n    return completionItem;\n}\n\nexport function getTextEditRange(textEdit: TextEdit | InsertReplaceEdit): AceRangeData {\n    if (textEdit.hasOwnProperty(\"insert\") && textEdit.hasOwnProperty(\"replace\")) {\n        textEdit = textEdit as InsertReplaceEdit;\n        let mergedRanges = mergeRanges([toRange(textEdit.insert), toRange(textEdit.replace)]);\n        return mergedRanges[0];\n    } else {\n        textEdit = textEdit as TextEdit;\n        return toRange(textEdit.range);\n    }\n}\n\nexport function toTooltip(hover: Hover[] | undefined): Tooltip | undefined {\n    if (!hover)\n        return;\n    let content = hover.map((el) => {\n        if (!el || !el.contents) \n            return;\n        if (MarkupContent.is(el.contents)) {\n            return fromMarkupContent(el.contents);\n        } else if (MarkedString.is(el.contents)) {\n            return \"```\" + (el.contents as any).value + \"```\";\n        } else {\n            let contents = el.contents.map((el) => {\n                if (typeof el !== \"string\") {\n                    return `\\`\\`\\`${el.value}\\`\\`\\``;\n                } else {\n                    return el;\n                }\n            });\n            return contents.join(\"\\n\\n\");\n        }\n    }).filter(notEmpty);\n    if (content.length === 0)\n        return;\n\n    //TODO: it could be merged within all ranges in future\n    let lspRange = hover.find((el) => el?.range)?.range;\n    let range;\n    if (lspRange) range = toRange(lspRange);\n    return {\n        content: {\n            type: \"markdown\",\n            text: content.join(\"\\n\\n\")\n        },\n        range: range\n    };\n}\n\nexport function fromSignatureHelp(signatureHelp: SignatureHelp[] | undefined): Tooltip | undefined {\n    if (!signatureHelp)\n        return;\n    let content = signatureHelp.map((el) => {\n        if (!el)\n            return;\n        \n        let signatureIndex = el?.activeSignature || 0;\n        let activeSignature = el.signatures[signatureIndex];\n        if (!activeSignature)\n            return;\n        let activeParam = el?.activeParameter;\n        let contents = activeSignature.label;\n        if (activeParam != undefined && activeSignature.parameters && activeSignature.parameters[activeParam]) {\n            let param = activeSignature.parameters[activeParam].label;\n            if (typeof param == \"string\") {\n                contents = contents.replace(param, `**${param}**`);\n            }\n        }\n        if (activeSignature.documentation) {\n            if (MarkupContent.is(activeSignature.documentation)) {\n                return contents + \"\\n\\n\" + fromMarkupContent(activeSignature.documentation)\n            } else {\n                contents += \"\\n\\n\" + activeSignature.documentation;\n                return contents;\n            }\n        } else {\n            return contents;\n        }\n    }).filter(notEmpty);\n    \n    if (content.length === 0)\n        return;\n\n    return {\n        content: {\n            type: \"markdown\",\n            text: content.join(\"\\n\\n\")\n        }\n    };\n}\n\nexport function fromMarkupContent(content?: string | MarkupContent): string | undefined {\n    if (!content)\n        return;\n\n    if (typeof content === \"string\") {\n        return content;\n    } else {\n        return content.value;\n    }\n}\n\nexport function fromAceDelta(delta: Ace.Delta, eol: string): TextDocumentContentChangeEvent {\n    const text = delta.lines.length > 1 ? delta.lines.join(eol) : delta.lines[0];\n    return {\n        range:\n            delta.action === \"insert\"\n                ? rangeFromPositions(fromPoint(delta.start), fromPoint(delta.start))\n                : rangeFromPositions(fromPoint(delta.start), fromPoint(delta.end)),\n        text: delta.action === \"insert\" ? text : \"\",\n    };\n}\n\nexport function filterDiagnostics(diagnostics: Diagnostic[], filterErrors: FilterDiagnosticsOptions): Diagnostic[] {\n    return CommonConverter.excludeByErrorMessage(diagnostics, filterErrors.errorMessagesToIgnore).map((el) => {\n        if (checkValueAgainstRegexpArray(el.message, filterErrors.errorMessagesToTreatAsWarning)) {\n            el.severity = DiagnosticSeverity.Warning;\n        } else if (checkValueAgainstRegexpArray(el.message, filterErrors.errorMessagesToTreatAsInfo)) {\n            el.severity = DiagnosticSeverity.Information;\n        }\n        return el;\n    })\n}\n","import {\n    LanguageService as VSLanguageService,\n    SchemaConfiguration\n} from \"vscode-json-languageservice\";\nimport {BaseService} from \"../base-service\";\nimport * as lsp from \"vscode-languageserver-protocol\";\n\nimport * as jsonService from 'vscode-json-languageservice';\nimport {TextDocumentIdentifier, TextDocumentItem} from \"vscode-languageserver-protocol\";\nimport {JsonServiceOptions, LanguageService} from \"../../types\";\nimport {filterDiagnostics} from \"../../type-converters/lsp-converters\";\n\nexport class JsonService extends BaseService<JsonServiceOptions> implements LanguageService {\n    $service: VSLanguageService;\n    schemas: { [schemaUri: string]: string } = {};\n\n    constructor(mode: string) {\n        super(mode);\n        this.$service = jsonService.getLanguageService({\n            schemaRequestService: (uri) => {\n                uri = uri.replace(\"file:///\", \"\");\n                let jsonSchema = this.schemas[uri];\n                if (jsonSchema)\n                    return Promise.resolve(jsonSchema);\n                return Promise.reject(`Unable to load schema at ${uri}`);\n            }\n        });\n    }\n\n    private $getJsonSchemaUri(sessionID): string | undefined {\n        return this.getOption(sessionID, \"schemaUri\");\n    }\n\n    addDocument(document: TextDocumentItem) {\n        super.addDocument(document);\n        this.$configureService(document.uri);\n    }\n\n    private $configureService(sessionID?: string) {\n        let schemas = this.getOption(sessionID ?? \"\", \"schemas\");\n        let sessionIDs = sessionID ? [] : Object.keys(this.documents);\n        schemas?.forEach((el) => {\n            if (sessionID) {\n                if (this.$getJsonSchemaUri(sessionID) == el.uri) {\n                    el.fileMatch ??= [];\n                    el.fileMatch.push(sessionID);\n                }\n            } else {\n                el.fileMatch = sessionIDs.filter(sessionID => this.$getJsonSchemaUri(sessionID) == el.uri);\n            }\n            let schema = el.schema ?? this.schemas[el.uri];\n            if (schema)\n                this.schemas[el.uri] = schema;\n            this.$service.resetSchema(el.uri);\n            el.schema = undefined;\n        });\n\n        this.$service.configure({\n            schemas: schemas as SchemaConfiguration[],\n            allowComments: this.mode === \"json5\"\n        });\n\n    }\n\n    removeDocument(document: TextDocumentIdentifier) {\n        super.removeDocument(document);\n        let schemas = this.getOption(document.uri, \"schemas\");\n        schemas?.forEach((el) => {\n            if (el.uri === this.$getJsonSchemaUri(document.uri)) {\n                el.fileMatch = el.fileMatch?.filter((pattern) => pattern != document.uri);\n            }\n        });\n        this.$service.configure({\n            schemas: schemas as SchemaConfiguration[],\n            allowComments: this.mode === \"json5\"\n        });\n    }\n\n    setOptions(sessionID: string, options: JsonServiceOptions, merge = false) {\n        super.setOptions(sessionID, options, merge);\n        this.$configureService(sessionID);\n    }\n\n    setGlobalOptions(options: JsonServiceOptions) {\n        super.setGlobalOptions(options);\n        this.$configureService();\n    }\n\n    format(document: lsp.TextDocumentIdentifier, range: lsp.Range, options: lsp.FormattingOptions): lsp.TextEdit[] {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return [];\n\n        return this.$service.format(fullDocument, range, options);\n    }\n\n    async doHover(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.Hover | null> {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return null;\n\n        let jsonDocument = this.$service.parseJSONDocument(fullDocument);\n        return this.$service.doHover(fullDocument, position, jsonDocument);\n    }\n\n    async doValidation(document: lsp.TextDocumentIdentifier): Promise<lsp.Diagnostic[]> {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return [];\n\n        let jsonDocument = this.$service.parseJSONDocument(fullDocument);\n        let diagnostics = await this.$service.doValidation(fullDocument, jsonDocument, {trailingCommas: this.mode === \"json5\" ? \"ignore\" : \"error\"});\n        return filterDiagnostics(diagnostics, this.optionsToFilterDiagnostics);\n    }\n\n    async doComplete(document: lsp.TextDocumentIdentifier, position: lsp.Position): Promise<lsp.CompletionItem[] | lsp.CompletionList | null> {\n        let fullDocument = this.getDocument(document.uri);\n        if (!fullDocument)\n            return null;\n\n        let jsonDocument = this.$service.parseJSONDocument(fullDocument);\n        return this.$service.doComplete(fullDocument, position, jsonDocument);\n    }\n\n    async doResolve(item: lsp.CompletionItem): Promise<lsp.CompletionItem> {\n        return this.$service.doResolve(item);\n    }\n}\n","import {\n    createProtocolConnection,\n    BrowserMessageReader,\n    BrowserMessageWriter,\n} from \"vscode-languageserver-protocol/browser\";\nimport {\n    CompletionRequest,\n    CompletionResolveRequest,\n    DidChangeTextDocumentNotification,\n    DidOpenTextDocumentNotification,\n    HoverRequest,\n    HoverParams,\n    InitializeRequest,\n    InitializeResult,\n    TextDocumentSyncKind,\n    CompletionItem,\n    DidOpenTextDocumentParams,\n    DidChangeTextDocumentParams,\n    CompletionParams,\n    DocumentRangeFormattingRequest,\n    DocumentRangeFormattingParams,\n    PublishDiagnosticsNotification,\n    Diagnostic,\n    TextDocument\n} from \"vscode-languageserver-protocol\";\nimport {JsonService} from \"ace-linters/services/json/json-service\";\n\nconst worker: Worker = self as any;\nconst conn = createProtocolConnection(\n    new BrowserMessageReader(worker),\n    new BrowserMessageWriter(worker)\n);\n\nlet jsonService = new JsonService(\"json\");\nconn.onRequest(InitializeRequest.type, (_params): InitializeResult => {\n    return {\n        capabilities: {\n            textDocumentSync: TextDocumentSyncKind.Incremental,\n            completionProvider: {\n                resolveProvider: true,\n            },\n            hoverProvider: true,\n        },\n    };\n});\nconn.onNotification(\n    DidOpenTextDocumentNotification.type,\n    (params: DidOpenTextDocumentParams) => {\n        jsonService.addDocument(params.textDocument);\n        doValidation(params.textDocument);\n    }\n);\nconn.onNotification(\n    DidChangeTextDocumentNotification.type,\n    (params: DidChangeTextDocumentParams) => {\n        jsonService.applyDeltas(params.textDocument, params.contentChanges);\n        doValidation(params.textDocument);\n    }\n);\nconn.onRequest(CompletionRequest.type, async (params: CompletionParams) => {\n    return jsonService.doComplete(\n        params.textDocument, params.position\n    );\n});\nconn.onRequest(HoverRequest.type, async (params: HoverParams) => {\n    return jsonService.doHover(params.textDocument, params.position);\n});\nconn.onRequest(CompletionResolveRequest.type, async (item: CompletionItem) => {\n    return jsonService.doResolve(item);\n});\nconn.onRequest(DocumentRangeFormattingRequest.type, async (params: DocumentRangeFormattingParams) => {\n    return jsonService.format(params.textDocument, params.range, params.options);\n});\n\nconn.listen();\n\nasync function doValidation(document) {\n    let diagnostics = await jsonService.doValidation(document);\n    sendDiagnostics(document, diagnostics);\n}\n\nfunction sendDiagnostics(document: TextDocument, diagnostics: Diagnostic[]): void {\n    conn.sendNotification(PublishDiagnosticsNotification.type, {\n        uri: document.uri, diagnostics\n    })\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [5224,1423], () => (__webpack_require__(92857)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t2857: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkace_linters_root\"] = self[\"webpackChunkace_linters_root\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(5224),\n\t\t__webpack_require__.e(1423)\n\t]).then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":["mergeObjects","obj1","obj2","mergedObjects","key","Object","keys","Array","isArray","concat","notEmpty","value","undefined","mergeRanges","ranges","list","sort","a","b","comparePoints","start","next","range","i","length","cmp","end","isEmpty","row","column","splice","p1","p2","checkValueAgainstRegexpArray","regexpArray","test","TextDocument","BaseService","addDocument","document","documents","uri","create","languageId","version","text","getDocument","removeDocument","options","getDocumentValue","getText","setValue","identifier","setGlobalOptions","globalOptions","setOptions","sessionID","merge","getOption","optionName","applyDeltas","deltas","update","doComplete","position","doHover","doResolve","item","doValidation","format","provideSignatureHelp","findDocumentHighlights","optionsToFilterDiagnostics","errorCodesToIgnore","errorCodesToTreatAsWarning","errorCodesToTreatAsInfo","errorMessagesToIgnore","errorMessagesToTreatAsWarning","errorMessagesToTreatAsInfo","mode","serviceData","CompletionItemKind","CommonConverter","normalizeRanges","completions","editor","Range","getSelectionRange","constructor","map","el","toRange","cleanHtml","html","replace","fromPoints","convertKind","kind","Keyword","Variable","Field","Function","Enum","Module","Class","Interface","File","Property","excludeByErrorMessage","diagnostics","fieldName","filter","InsertTextFormat","MarkupContent","MarkedString","DiagnosticSeverity","fromRange","line","character","rangeFromPositions","fromPoint","point","toPoint","toAnnotations","message","type","severity","toCompletion","itemKind","values","indexOf","textEdit","newText","insertText","label","command","getTextEditRange","completion","meta","caption","score","insertTextFormat","Snippet","documentation","toCompletions","combinedCompletions","allCompletions","items","service","flat","toResolvedCompletion","fromMarkupContent","toCompletionItem","title","completionItem","PlainText","hasOwnProperty","mergedRanges","insert","toTooltip","hover","content","contents","is","join","lspRange","find","fromSignatureHelp","signatureHelp","signatureIndex","activeSignature","signatures","activeParam","activeParameter","parameters","param","fromAceDelta","delta","eol","lines","action","filterDiagnostics","filterErrors","Warning","Information","jsonService","JsonService","$getJsonSchemaUri","$configureService","schemas","sessionIDs","forEach","fileMatch","push","schema","$service","resetSchema","configure","allowComments","pattern","fullDocument","jsonDocument","parseJSONDocument","trailingCommas","getLanguageService","schemaRequestService","jsonSchema","Promise","resolve","reject","createProtocolConnection","BrowserMessageReader","BrowserMessageWriter","CompletionRequest","CompletionResolveRequest","DidChangeTextDocumentNotification","DidOpenTextDocumentNotification","HoverRequest","InitializeRequest","TextDocumentSyncKind","DocumentRangeFormattingRequest","PublishDiagnosticsNotification","worker","self","conn","onRequest","_params","capabilities","textDocumentSync","Incremental","completionProvider","resolveProvider","hoverProvider","onNotification","params","textDocument","contentChanges","listen","sendDiagnostics","sendNotification"],"sourceRoot":""}