{"version":3,"file":"bundle.5031.js","mappings":"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","sources":["webpack://ace-linters-root/./packages/ace-linters/build/service-manager.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \t// The require scope\n/******/ \tvar __webpack_require__ = {};\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  ServiceManager: () => (/* binding */ ServiceManager)\n});\n\n;// CONCATENATED MODULE: ./src/utils.ts\nfunction mergeObjects(obj1, obj2) {\n    if (!obj1) return obj2;\n    if (!obj2) return obj1;\n    const mergedObjects = {\n        ...obj2,\n        ...obj1\n    }; // Give priority to obj1 values by spreading obj2 first, then obj1\n    for (const key of Object.keys(mergedObjects)){\n        if (obj1[key] && obj2[key]) {\n            if (Array.isArray(obj1[key])) {\n                mergedObjects[key] = obj1[key].concat(obj2[key]);\n            } else if (Array.isArray(obj2[key])) {\n                mergedObjects[key] = obj2[key].concat(obj1[key]);\n            } else if (typeof obj1[key] === 'object' && typeof obj2[key] === 'object') {\n                mergedObjects[key] = mergeObjects(obj1[key], obj2[key]);\n            }\n        }\n    }\n    return mergedObjects;\n}\nfunction notEmpty(value) {\n    return value !== null && value !== undefined;\n}\n//taken with small changes from ace-code\nfunction mergeRanges(ranges) {\n    var list = ranges;\n    list = list.sort(function(a, b) {\n        return comparePoints(a.start, b.start);\n    });\n    var next = list[0], range;\n    for(var i = 1; i < list.length; i++){\n        range = next;\n        next = list[i];\n        var cmp = comparePoints(range.end, next.start);\n        if (cmp < 0) continue;\n        if (cmp == 0 && !range.isEmpty() && !next.isEmpty()) continue;\n        if (comparePoints(range.end, next.end) < 0) {\n            range.end.row = next.end.row;\n            range.end.column = next.end.column;\n        }\n        list.splice(i, 1);\n        next = range;\n        i--;\n    }\n    return list;\n}\nfunction comparePoints(p1, p2) {\n    return p1.row - p2.row || p1.column - p2.column;\n}\nfunction checkValueAgainstRegexpArray(value, regexpArray) {\n    if (!regexpArray) {\n        return false;\n    }\n    for(let i = 0; i < regexpArray.length; i++){\n        if (regexpArray[i].test(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n;// CONCATENATED MODULE: ./src/message-types.ts\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nclass BaseMessage {\n    constructor(sessionId){\n        _define_property(this, \"sessionId\", void 0);\n        this.sessionId = sessionId;\n    }\n}\nclass InitMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value, version, mode, options){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.init);\n        _define_property(this, \"mode\", void 0);\n        _define_property(this, \"options\", void 0);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.version = version;\n        this.options = options;\n        this.mode = mode;\n        this.value = value;\n    }\n}\nclass FormatMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value, format){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.format);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"format\", void 0);\n        this.value = value;\n        this.format = format;\n    }\n}\nclass CompleteMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.complete);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass ResolveCompletionMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.resolveCompletion);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass HoverMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.hover);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass ValidateMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.validate);\n    }\n}\nclass ChangeMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value, version){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.change);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.value = value;\n        this.version = version;\n    }\n}\nclass DeltasMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value, version){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.applyDelta);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.value = value;\n        this.version = version;\n    }\n}\nclass ChangeModeMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value, mode){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.changeMode);\n        _define_property(this, \"mode\", void 0);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n        this.mode = mode;\n    }\n}\nclass ChangeOptionsMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, options, merge = false){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.changeOptions);\n        _define_property(this, \"options\", void 0);\n        _define_property(this, \"merge\", void 0);\n        this.options = options;\n        this.merge = merge;\n    }\n}\nclass DisposeMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.dispose);\n    }\n}\nclass GlobalOptionsMessage {\n    constructor(serviceName, options, merge){\n        _define_property(this, \"type\", MessageType.globalOptions);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"options\", void 0);\n        _define_property(this, \"merge\", void 0);\n        this.serviceName = serviceName;\n        this.options = options;\n        this.merge = merge;\n    }\n}\nclass ConfigureFeaturesMessage {\n    constructor(serviceName, options){\n        _define_property(this, \"type\", MessageType.configureFeatures);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"options\", void 0);\n        this.serviceName = serviceName;\n        this.options = options;\n    }\n}\nclass SignatureHelpMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.signatureHelp);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass DocumentHighlightMessage extends (/* unused pure expression or super */ null && (BaseMessage)) {\n    constructor(sessionId, value){\n        super(sessionId);\n        _define_property(this, \"type\", MessageType.documentHighlight);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nvar MessageType;\n(function(MessageType) {\n    MessageType[MessageType[\"init\"] = 0] = \"init\";\n    MessageType[MessageType[\"format\"] = 1] = \"format\";\n    MessageType[MessageType[\"complete\"] = 2] = \"complete\";\n    MessageType[MessageType[\"resolveCompletion\"] = 3] = \"resolveCompletion\";\n    MessageType[MessageType[\"change\"] = 4] = \"change\";\n    MessageType[MessageType[\"hover\"] = 5] = \"hover\";\n    MessageType[MessageType[\"validate\"] = 6] = \"validate\";\n    MessageType[MessageType[\"applyDelta\"] = 7] = \"applyDelta\";\n    MessageType[MessageType[\"changeMode\"] = 8] = \"changeMode\";\n    MessageType[MessageType[\"changeOptions\"] = 9] = \"changeOptions\";\n    MessageType[MessageType[\"dispose\"] = 10] = \"dispose\";\n    MessageType[MessageType[\"globalOptions\"] = 11] = \"globalOptions\";\n    MessageType[MessageType[\"configureFeatures\"] = 12] = \"configureFeatures\";\n    MessageType[MessageType[\"signatureHelp\"] = 13] = \"signatureHelp\";\n    MessageType[MessageType[\"documentHighlight\"] = 14] = \"documentHighlight\";\n})(MessageType || (MessageType = {}));\n\n;// CONCATENATED MODULE: ./src/services/service-manager.ts\nfunction service_manager_define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n\n\nclass ServiceManager {\n    static async $initServiceInstance(service) {\n        let module = await service.module();\n        service.serviceInstance = new module[service.className](service.modes);\n        if (service.options) service.serviceInstance.setGlobalOptions(service.options);\n        service.serviceInstance.serviceData = service;\n        return service.serviceInstance;\n    }\n    async $getServicesInstancesByMode(mode) {\n        let services = this.findServicesByMode(mode);\n        if (services.length === 0) {\n            return [];\n        }\n        return Promise.all(services.map(async (service)=>{\n            if (!service.serviceInstance) {\n                return await ServiceManager.$initServiceInstance(service);\n            } else {\n                return service.serviceInstance;\n            }\n        }));\n    }\n    setGlobalOptions(serviceName, options, merge = false) {\n        let service = this.$services[serviceName];\n        if (!service) return;\n        service.options = merge ? mergeObjects(options, service.options) : options;\n        if (service.serviceInstance) {\n            service.serviceInstance.setGlobalOptions(service.options);\n        }\n    }\n    async addDocument(documentIdentifier, documentValue, mode, options) {\n        if (!mode || !/^ace\\/mode\\//.test(mode)) return;\n        mode = mode.replace(\"ace/mode/\", \"\");\n        let serviceInstances = await this.$getServicesInstancesByMode(mode);\n        if (serviceInstances.length === 0) return;\n        let documentItem = {\n            uri: documentIdentifier.uri,\n            version: documentIdentifier.version,\n            languageId: mode,\n            text: documentValue\n        };\n        serviceInstances.forEach((el)=>el.addDocument(documentItem));\n        this.$sessionIDToMode[documentIdentifier.uri] = mode;\n        return serviceInstances;\n    }\n    async changeDocumentMode(documentIdentifier, value, mode, options) {\n        this.removeDocument(documentIdentifier);\n        return await this.addDocument(documentIdentifier, value, mode, options);\n    }\n    removeDocument(document) {\n        let services = this.getServicesInstances(document.uri);\n        if (services.length > 0) {\n            services.forEach((el)=>el.removeDocument(document));\n            delete this.$sessionIDToMode[document.uri];\n        }\n    }\n    getServicesInstances(sessionID) {\n        let mode = this.$sessionIDToMode[sessionID];\n        if (!mode) return []; //TODO:\n        let services = this.findServicesByMode(mode);\n        return services.map((el)=>el.serviceInstance).filter(notEmpty);\n    }\n    filterByFeature(serviceInstances, feature) {\n        return serviceInstances.filter((el)=>el.serviceData.features[feature] === true);\n    }\n    findServicesByMode(mode) {\n        return Object.values(this.$services).filter((el)=>{\n            let extensions = el.modes.split('|');\n            if (extensions.includes(mode)) return el;\n        });\n    }\n    registerService(name, service) {\n        service.features = this.setDefaultFeaturesState(service.features);\n        this.$services[name] = service;\n    }\n    configureFeatures(name, features) {\n        features = this.setDefaultFeaturesState(features);\n        this.$services[name].features = features;\n    }\n    setDefaultFeaturesState(serviceFeatures) {\n        var _features, _features1, _features2, _features3, _features4, _features5, _features6;\n        let features = serviceFeatures !== null && serviceFeatures !== void 0 ? serviceFeatures : {};\n        var _hover;\n        (_hover = (_features = features).hover) !== null && _hover !== void 0 ? _hover : _features.hover = true;\n        var _completion;\n        (_completion = (_features1 = features).completion) !== null && _completion !== void 0 ? _completion : _features1.completion = true;\n        var _completionResolve;\n        (_completionResolve = (_features2 = features).completionResolve) !== null && _completionResolve !== void 0 ? _completionResolve : _features2.completionResolve = true;\n        var _format;\n        (_format = (_features3 = features).format) !== null && _format !== void 0 ? _format : _features3.format = true;\n        var _diagnostics;\n        (_diagnostics = (_features4 = features).diagnostics) !== null && _diagnostics !== void 0 ? _diagnostics : _features4.diagnostics = true;\n        var _signatureHelp;\n        (_signatureHelp = (_features5 = features).signatureHelp) !== null && _signatureHelp !== void 0 ? _signatureHelp : _features5.signatureHelp = true;\n        var _documentHighlight;\n        (_documentHighlight = (_features6 = features).documentHighlight) !== null && _documentHighlight !== void 0 ? _documentHighlight : _features6.documentHighlight = true;\n        return features;\n    }\n    constructor(ctx){\n        service_manager_define_property(this, \"$services\", {});\n        service_manager_define_property(this, \"$sessionIDToMode\", {});\n        let doValidation = async (document, servicesInstances)=>{\n            servicesInstances !== null && servicesInstances !== void 0 ? servicesInstances : servicesInstances = this.getServicesInstances(document.uri);\n            if (servicesInstances.length === 0) {\n                return;\n            }\n            //this is list of documents linked to services\n            let sessionIDList = Object.keys(servicesInstances[0].documents);\n            servicesInstances = this.filterByFeature(servicesInstances, \"diagnostics\");\n            let postMessage = {\n                \"type\": MessageType.validate\n            };\n            for (let sessionID of sessionIDList){\n                var _ref;\n                let diagnostics = (_ref = await Promise.all(servicesInstances.map((el)=>{\n                    return el.doValidation({\n                        uri: sessionID\n                    });\n                }))) !== null && _ref !== void 0 ? _ref : [];\n                postMessage[\"sessionId\"] = sessionID;\n                postMessage[\"value\"] = diagnostics.flat();\n                ctx.postMessage(postMessage);\n            }\n        };\n        let provideValidationForServiceInstance = async (serviceName)=>{\n            var serviceInstance = this.$services[serviceName].serviceInstance;\n            if (serviceInstance) await doValidation(undefined, [\n                serviceInstance\n            ]);\n        };\n        ctx.addEventListener(\"message\", async (ev)=>{\n            let message = ev.data;\n            var _message_sessionId;\n            let sessionID = (_message_sessionId = message.sessionId) !== null && _message_sessionId !== void 0 ? _message_sessionId : \"\";\n            let version = message.version;\n            let postMessage = {\n                \"type\": message.type,\n                \"sessionId\": sessionID\n            };\n            let serviceInstances = this.getServicesInstances(sessionID);\n            let documentIdentifier = {\n                uri: sessionID,\n                version: version\n            };\n            switch(message[\"type\"]){\n                case MessageType.format:\n                    serviceInstances = this.filterByFeature(serviceInstances, \"format\");\n                    if (serviceInstances.length > 0) {\n                        //we will use only first service to format\n                        postMessage[\"value\"] = serviceInstances[0].format(documentIdentifier, message.value, message.format);\n                    }\n                    break;\n                case MessageType.complete:\n                    postMessage[\"value\"] = (await Promise.all(this.filterByFeature(serviceInstances, \"completion\").map(async (service)=>{\n                        return {\n                            completions: await service.doComplete(documentIdentifier, message.value),\n                            service: service.serviceData.className\n                        };\n                    }))).filter(notEmpty);\n                    break;\n                case MessageType.resolveCompletion:\n                    var _this_filterByFeature_find;\n                    let serviceName = message.value.service;\n                    postMessage[\"value\"] = await ((_this_filterByFeature_find = this.filterByFeature(serviceInstances, \"completionResolve\").find((service)=>{\n                        if (service.serviceData.className === serviceName) {\n                            return service;\n                        }\n                    })) === null || _this_filterByFeature_find === void 0 ? void 0 : _this_filterByFeature_find.doResolve(message.value));\n                    break;\n                case MessageType.change:\n                    serviceInstances.forEach((service)=>{\n                        service.setValue(documentIdentifier, message.value);\n                    });\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case MessageType.applyDelta:\n                    serviceInstances.forEach((service)=>{\n                        service.applyDeltas(documentIdentifier, message.value);\n                    });\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case MessageType.hover:\n                    postMessage[\"value\"] = (await Promise.all(this.filterByFeature(serviceInstances, \"hover\").map(async (service)=>{\n                        return service.doHover(documentIdentifier, message.value);\n                    }))).filter(notEmpty);\n                    break;\n                case MessageType.validate:\n                    postMessage[\"value\"] = await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case MessageType.init:\n                    var _this;\n                    postMessage[\"value\"] = (_this = await this.addDocument(documentIdentifier, message.value, message.mode, message.options)) === null || _this === void 0 ? void 0 : _this.map((el)=>el.serviceCapabilities);\n                    await doValidation(documentIdentifier);\n                    break;\n                case MessageType.changeMode:\n                    var _this1;\n                    postMessage[\"value\"] = (_this1 = await this.changeDocumentMode(documentIdentifier, message.value, message.mode, message.options)) === null || _this1 === void 0 ? void 0 : _this1.map((el)=>el.serviceCapabilities);\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case MessageType.changeOptions:\n                    serviceInstances.forEach((service)=>{\n                        service.setOptions(sessionID, message.options);\n                    });\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case MessageType.dispose:\n                    this.removeDocument(documentIdentifier);\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case MessageType.globalOptions:\n                    this.setGlobalOptions(message.serviceName, message.options, message.merge);\n                    await provideValidationForServiceInstance(message.serviceName);\n                    break;\n                case MessageType.configureFeatures:\n                    this.configureFeatures(message.serviceName, message.options);\n                    await provideValidationForServiceInstance(message.serviceName);\n                    break;\n                case MessageType.signatureHelp:\n                    postMessage[\"value\"] = (await Promise.all(this.filterByFeature(serviceInstances, \"signatureHelp\").map(async (service)=>{\n                        return service.provideSignatureHelp(documentIdentifier, message.value);\n                    }))).filter(notEmpty);\n                    break;\n                case MessageType.documentHighlight:\n                    let highlights = (await Promise.all(this.filterByFeature(serviceInstances, \"documentHighlight\").map(async (service)=>{\n                        return service.findDocumentHighlights(documentIdentifier, message.value);\n                    }))).filter(notEmpty);\n                    postMessage[\"value\"] = highlights.flat();\n                    break;\n            }\n            ctx.postMessage(postMessage);\n        });\n    }\n}\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","a","i","self","__webpack_require__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","__webpack_exports__","ServiceManager","mergeObjects","obj1","obj2","mergedObjects","keys","Array","isArray","concat","notEmpty","undefined","mergeRanges","ranges","list","sort","b","comparePoints","start","next","range","length","cmp","end","isEmpty","row","column","splice","p1","p2","checkValueAgainstRegexpArray","regexpArray","test","_define_property","configurable","writable","BaseMessage","constructor","sessionId","InitMessage","version","mode","options","MessageType","init","FormatMessage","format","CompleteMessage","complete","ResolveCompletionMessage","resolveCompletion","HoverMessage","hover","ValidateMessage","validate","ChangeMessage","change","DeltasMessage","applyDelta","ChangeModeMessage","changeMode","ChangeOptionsMessage","merge","changeOptions","DisposeMessage","dispose","GlobalOptionsMessage","serviceName","globalOptions","ConfigureFeaturesMessage","configureFeatures","SignatureHelpMessage","signatureHelp","DocumentHighlightMessage","documentHighlight","service_manager_define_property","$initServiceInstance","service","serviceInstance","className","modes","setGlobalOptions","serviceData","$getServicesInstancesByMode","services","findServicesByMode","Promise","all","map","$services","addDocument","documentIdentifier","documentValue","replace","serviceInstances","documentItem","uri","languageId","text","forEach","el","$sessionIDToMode","changeDocumentMode","removeDocument","document","getServicesInstances","sessionID","filter","filterByFeature","feature","features","values","extensions","split","includes","registerService","name","setDefaultFeaturesState","serviceFeatures","_features","_features1","_features2","_features3","_features4","_features5","_features6","_hover","_completion","completion","_completionResolve","completionResolve","_format","_diagnostics","diagnostics","_signatureHelp","_documentHighlight","ctx","doValidation","servicesInstances","sessionIDList","documents","postMessage","_ref","flat","provideValidationForServiceInstance","addEventListener","ev","message","data","_message_sessionId","type","completions","doComplete","_this_filterByFeature_find","find","doResolve","setValue","applyDeltas","doHover","_this","serviceCapabilities","_this1","setOptions","provideSignatureHelp","highlights","findDocumentHighlights"],"sourceRoot":""}